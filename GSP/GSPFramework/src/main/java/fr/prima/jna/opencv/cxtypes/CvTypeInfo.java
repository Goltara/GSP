package fr.prima.jna.opencv.cxtypes;
/**
 * <i>native declaration : cxtypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvTypeInfo extends com.ochafik.lang.jnaerator.runtime.Structure<CvTypeInfo, CvTypeInfo.ByValue, CvTypeInfo.ByReference> {
	public int flags;
	public int header_size;
	/// C type : CvTypeInfo*
	public fr.prima.jna.opencv.cxtypes.CvTypeInfo.ByReference prev;
	/// C type : CvTypeInfo*
	public fr.prima.jna.opencv.cxtypes.CvTypeInfo.ByReference next;
	/// C type : const char*
	public com.sun.jna.Pointer type_name;
	/// C type : CvIsInstanceFunc
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CvIsInstanceFunc is_instance;
	/// C type : CvReleaseFunc
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CvReleaseFunc release;
	/// C type : CvReadFunc
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CvReadFunc read;
	/// C type : CvWriteFunc
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CvWriteFunc write;
	/// C type : CvCloneFunc
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CvCloneFunc clone;
	public CvTypeInfo() {
		super();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected CvTypeInfo newInstance() { return new CvTypeInfo(); }
	public static CvTypeInfo[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(CvTypeInfo.class, arrayLength);
	}
	public static class ByReference extends CvTypeInfo implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvTypeInfo implements com.sun.jna.Structure.ByValue {}
}
