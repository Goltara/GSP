package fr.prima.jna.vlfeat;
/**
 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:34</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VlPgmImage extends com.ochafik.lang.jnaerator.runtime.Structure<VlPgmImage, VlPgmImage.ByValue, VlPgmImage.ByReference> {
	/// < image width.
	public int width;
	/// < image height.
	public int height;
	/// < pixel maximum value (<= 2^16-1).
	public int max_value;
	/**
	 * < is RAW format?<br>
	 * C type : vl_bool
	 */
	public int is_raw;
	public VlPgmImage() {
		super();
	}
	/**
	 * @param width < image width.<br>
	 * @param height < image height.<br>
	 * @param max_value < pixel maximum value (<= 2^16-1).<br>
	 * @param is_raw < is RAW format?<br>
	 * C type : vl_bool
	 */
	public VlPgmImage(int width, int height, int max_value, int is_raw) {
		super();
		this.width = width;
		this.height = height;
		this.max_value = max_value;
		this.is_raw = is_raw;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VlPgmImage newInstance() { return new VlPgmImage(); }
	public static VlPgmImage[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(VlPgmImage.class, arrayLength);
	}
	public static class ByReference extends VlPgmImage implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends VlPgmImage implements com.sun.jna.Structure.ByValue {}
}
