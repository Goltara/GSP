package fr.prima.jna.opencv.cxtypes;
/**
 * <i>native declaration : cxtypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IplConvKernelFP extends com.ochafik.lang.jnaerator.runtime.Structure<IplConvKernelFP, IplConvKernelFP.ByValue, IplConvKernelFP.ByReference> {
	public int nCols;
	public int nRows;
	public int anchorX;
	public int anchorY;
	/// C type : float*
	public com.sun.jna.ptr.FloatByReference values;
	public IplConvKernelFP() {
		super();
	}
	/// @param values C type : float*
	public IplConvKernelFP(int nCols, int nRows, int anchorX, int anchorY, com.sun.jna.ptr.FloatByReference values) {
		super();
		this.nCols = nCols;
		this.nRows = nRows;
		this.anchorX = anchorX;
		this.anchorY = anchorY;
		this.values = values;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected IplConvKernelFP newInstance() { return new IplConvKernelFP(); }
	public static IplConvKernelFP[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(IplConvKernelFP.class, arrayLength);
	}
	public static class ByReference extends IplConvKernelFP implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends IplConvKernelFP implements com.sun.jna.Structure.ByValue {}
}
