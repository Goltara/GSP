package fr.prima.jna.opencv.cxtypes;
/**
 * <i>native declaration : cxtypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IplImage extends com.ochafik.lang.jnaerator.runtime.Structure<IplImage, IplImage.ByValue, IplImage.ByReference> {
	/// sizeof(IplImage)
	public int nSize;
	/// version (=0)
	public int ID;
	/// Most of OpenCV functions support 1,2,3 or 4 channels
	public int nChannels;
	/// ignored by OpenCV
	public int alphaChannel;
	/**
	 * pixel depth in bits: IPL_DEPTH_8U, IPL_DEPTH_8S, IPL_DEPTH_16S,<br>
	 * IPL_DEPTH_32S, IPL_DEPTH_32F and IPL_DEPTH_64F are supported
	 */
	public int depth;
	/**
	 * ignored by OpenCV<br>
	 * C type : char[4]
	 */
	public byte[] colorModel = new byte[(4)];
	/**
	 * ditto<br>
	 * C type : char[4]
	 */
	public byte[] channelSeq = new byte[(4)];
	/**
	 * 0 - interleaved color channels, 1 - separate color channels.<br>
	 * cvCreateImage can only create interleaved images
	 */
	public int dataOrder;
	/**
	 * 0 - top-left origin,<br>
	 * 1 - bottom-left origin (Windows bitmaps style)
	 */
	public int origin;
	/**
	 * Alignment of image rows (4 or 8).<br>
	 * OpenCV ignores it and uses widthStep instead
	 */
	public int align;
	/// image width in pixels
	public int width;
	/// image height in pixels
	public int height;
	/**
	 * image ROI. if NULL, the whole image is selected<br>
	 * C type : _IplROI*
	 */
	public fr.prima.jna.opencv.cxtypes.IplROI.ByReference roi;
	/**
	 * must be NULL<br>
	 * C type : _IplImage*
	 */
	public fr.prima.jna.opencv.cxtypes.IplImage.ByReference maskROI;
	/**
	 * ditto<br>
	 * C type : void*
	 */
	public com.sun.jna.Pointer imageId;
	/**
	 * ditto<br>
	 * C type : _IplTileInfo*
	 */
	public fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IplTileInfo tileInfo;
	/**
	 * image data size in bytes<br>
	 * (==image->height*image->widthStep<br>
	 * in case of interleaved data)
	 */
	public int imageSize;
	/**
	 * pointer to aligned image data<br>
	 * C type : char*
	 */
	public com.sun.jna.Pointer imageData;
	/// size of aligned image row in bytes
	public int widthStep;
	/**
	 * ignored by OpenCV<br>
	 * C type : int[4]
	 */
	public int[] BorderMode = new int[(4)];
	/**
	 * ditto<br>
	 * C type : int[4]
	 */
	public int[] BorderConst = new int[(4)];
	/**
	 * pointer to very origin of image data<br>
	 * (not necessarily aligned) -<br>
	 * needed for correct deallocation<br>
	 * C type : char*
	 */
	public com.sun.jna.Pointer imageDataOrigin;
	public IplImage() {
		super();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected IplImage newInstance() { return new IplImage(); }
	public static IplImage[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(IplImage.class, arrayLength);
	}
	public static class ByReference extends IplImage implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends IplImage implements com.sun.jna.Structure.ByValue {}
}
