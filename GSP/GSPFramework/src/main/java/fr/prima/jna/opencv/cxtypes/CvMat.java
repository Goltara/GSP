package fr.prima.jna.opencv.cxtypes;
/**
 * <i>native declaration : cxtypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CvMat extends com.ochafik.lang.jnaerator.runtime.Structure<CvMat, CvMat.ByValue, CvMat.ByReference> {
	public int type;
	public int step;
	/**
	 * for internal use only<br>
	 * C type : int*
	 */
	public com.sun.jna.ptr.IntByReference refcount;
	public int hdr_refcount;
	/// C type : data_union
	public data_union data;
	public int rows;
	public int cols;
	/// <i>native declaration : cxtypes.h:514</i>
	public static class data_union extends com.ochafik.lang.jnaerator.runtime.Union<data_union, data_union.ByValue, data_union.ByReference> {
		/// C type : uchar*
		public com.sun.jna.Pointer ptr;
		/// C type : short*
		public com.sun.jna.ptr.ShortByReference s;
		/// C type : int*
		public com.sun.jna.ptr.IntByReference i;
		/// C type : float*
		public com.sun.jna.ptr.FloatByReference fl;
		/// C type : double*
		public com.sun.jna.ptr.DoubleByReference db;
		public data_union() {
			super();
		}
		/// @param db C type : double*
		public data_union(com.sun.jna.ptr.DoubleByReference db) {
			super();
			this.db = db;
			setType(com.sun.jna.ptr.DoubleByReference.class);
		}
		/// @param s C type : short*
		public data_union(com.sun.jna.ptr.ShortByReference s) {
			super();
			this.s = s;
			setType(com.sun.jna.ptr.ShortByReference.class);
		}
		/// @param i C type : int*
		public data_union(com.sun.jna.ptr.IntByReference i) {
			super();
			this.i = i;
			setType(com.sun.jna.ptr.IntByReference.class);
		}
		/// @param fl C type : float*
		public data_union(com.sun.jna.ptr.FloatByReference fl) {
			super();
			this.fl = fl;
			setType(com.sun.jna.ptr.FloatByReference.class);
		}
		/// @param ptr C type : uchar*
		public data_union(com.sun.jna.Pointer ptr) {
			super();
			this.ptr = ptr;
			setType(com.sun.jna.Pointer.class);
		}
		protected ByReference newByReference() { return new ByReference(); }
		protected ByValue newByValue() { return new ByValue(); }
		protected data_union newInstance() { return new data_union(); }
		public static data_union[] newArray(int arrayLength) {
			return com.ochafik.lang.jnaerator.runtime.Union.newArray(data_union.class, arrayLength);
		}
		public static class ByReference extends data_union implements com.sun.jna.Structure.ByReference {}
		public static class ByValue extends data_union implements com.sun.jna.Structure.ByValue {}
	}
	public CvMat() {
		super();
	}
	/**
	 * @param refcount for internal use only<br>
	 * C type : int*<br>
	 * @param data C type : data_union
	 */
	public CvMat(int type, int step, com.sun.jna.ptr.IntByReference refcount, int hdr_refcount, data_union data, int rows, int cols) {
		super();
		this.type = type;
		this.step = step;
		this.refcount = refcount;
		this.hdr_refcount = hdr_refcount;
		this.data = data;
		this.rows = rows;
		this.cols = cols;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected CvMat newInstance() { return new CvMat(); }
	public static CvMat[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(CvMat.class, arrayLength);
	}
	public static class ByReference extends CvMat implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends CvMat implements com.sun.jna.Structure.ByValue {}
}
