package fr.prima.jna.vlfeat;
/**
 * @brief MSER filter statistics definition<br>
 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:47</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VlMserStats extends com.ochafik.lang.jnaerator.runtime.Structure<VlMserStats, VlMserStats.ByValue, VlMserStats.ByReference> {
	/// < number of extremal regions
	public int num_extremal;
	/// < number of unstable extremal regions
	public int num_unstable;
	/// < number of regions that failed the absolute stability test
	public int num_abs_unstable;
	/// < number of regions that failed the maximum size test
	public int num_too_big;
	/// < number of regions that failed the minimum size test
	public int num_too_small;
	/// < number of regions that failed the duplicate test
	public int num_duplicates;
	public VlMserStats() {
		super();
	}
	/**
	 * @param num_extremal < number of extremal regions<br>
	 * @param num_unstable < number of unstable extremal regions<br>
	 * @param num_abs_unstable < number of regions that failed the absolute stability test<br>
	 * @param num_too_big < number of regions that failed the maximum size test<br>
	 * @param num_too_small < number of regions that failed the minimum size test<br>
	 * @param num_duplicates < number of regions that failed the duplicate test
	 */
	public VlMserStats(int num_extremal, int num_unstable, int num_abs_unstable, int num_too_big, int num_too_small, int num_duplicates) {
		super();
		this.num_extremal = num_extremal;
		this.num_unstable = num_unstable;
		this.num_abs_unstable = num_abs_unstable;
		this.num_too_big = num_too_big;
		this.num_too_small = num_too_small;
		this.num_duplicates = num_duplicates;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VlMserStats newInstance() { return new VlMserStats(); }
	public static VlMserStats[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(VlMserStats.class, arrayLength);
	}
	public static class ByReference extends VlMserStats implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends VlMserStats implements com.sun.jna.Structure.ByValue {}
}
