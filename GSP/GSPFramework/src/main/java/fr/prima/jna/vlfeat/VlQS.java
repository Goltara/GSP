package fr.prima.jna.vlfeat;
/**
 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/quickshift.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VlQS extends com.ochafik.lang.jnaerator.runtime.Structure<VlQS, VlQS.ByValue, VlQS.ByReference> {
	/**
	 * < height x width x channels feature image<br>
	 * C type : vl_qs_type*
	 */
	public com.sun.jna.ptr.DoubleByReference image;
	/// < height of the image
	public int height;
	/// < width of the image
	public int width;
	/// < number of channels in the image
	public int channels;
	/// C type : vl_bool
	public int medoid;
	/// C type : vl_qs_type
	public double sigma;
	/// C type : vl_qs_type
	public double tau;
	/// C type : int*
	public com.sun.jna.ptr.IntByReference parents;
	/// C type : vl_qs_type*
	public com.sun.jna.ptr.DoubleByReference dists;
	/// C type : vl_qs_type*
	public com.sun.jna.ptr.DoubleByReference density;
	public VlQS() {
		super();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VlQS newInstance() { return new VlQS(); }
	public static VlQS[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(VlQS.class, arrayLength);
	}
	public static class ByReference extends VlQS implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends VlQS implements com.sun.jna.Structure.ByValue {}
}
