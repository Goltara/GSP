package fr.prima.jna.vlfeat;
/**
 * @internal @brief MSER: extremal region (declaration)<br>
 * *<br>
 * * Extremal regions (ER) are extracted from the region forest. Each<br>
 * * region is represented by an instance of this structure. The<br>
 * * structures are stored into an array, in arbitrary order.<br>
 * *<br>
 * * ER are arranged into a tree. @a parent points to the parent ER, or<br>
 * * to itself if the ER is the root.<br>
 * *<br>
 * * An instance of the structure represents the extremal region of the<br>
 * * level set of intensity VlMserExtrReg::value and containing the<br>
 * * pixel VlMserExtReg::index.<br>
 * *<br>
 * * VlMserExtrReg::area is the area of the extremal region and<br>
 * * VlMserExtrReg::area_top is the area of the extremal region<br>
 * * containing this region in the level set of intensity<br>
 * * VlMserExtrReg::area + @c delta.<br>
 * *<br>
 * * VlMserExtrReg::variation is the relative area variation @c<br>
 * * (area_top-area)/area.<br>
 * *<br>
 * * VlMserExtrReg::max_stable is a flag signaling whether this extremal<br>
 * * region is also maximally stable.<br>
 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:183</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VlMserExtrReg extends com.ochafik.lang.jnaerator.runtime.Structure<VlMserExtrReg, VlMserExtrReg.ByValue, VlMserExtrReg.ByReference> {
	/// < index of the parent region
	public int parent;
	/// < index of pivot pixel
	public int index;
	/**
	 * < value of pivot pixel<br>
	 * C type : vl_mser_pix
	 */
	public byte value;
	/**
	 * < shortcut used when building a tree<br>
	 * C type : vl_uint
	 */
	public int shortcut;
	/**
	 * < area of the region<br>
	 * C type : vl_uint
	 */
	public int area;
	/// < rel. area variation
	public float variation;
	/**
	 * < max stable number (=0 if not maxstable)<br>
	 * C type : vl_uint
	 */
	public int max_stable;
	public VlMserExtrReg() {
		super();
	}
	/**
	 * @param parent < index of the parent region<br>
	 * @param index < index of pivot pixel<br>
	 * @param value < value of pivot pixel<br>
	 * C type : vl_mser_pix<br>
	 * @param shortcut < shortcut used when building a tree<br>
	 * C type : vl_uint<br>
	 * @param area < area of the region<br>
	 * C type : vl_uint<br>
	 * @param variation < rel. area variation<br>
	 * @param max_stable < max stable number (=0 if not maxstable)<br>
	 * C type : vl_uint
	 */
	public VlMserExtrReg(int parent, int index, byte value, int shortcut, int area, float variation, int max_stable) {
		super();
		this.parent = parent;
		this.index = index;
		this.value = value;
		this.shortcut = shortcut;
		this.area = area;
		this.variation = variation;
		this.max_stable = max_stable;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VlMserExtrReg newInstance() { return new VlMserExtrReg(); }
	public static VlMserExtrReg[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(VlMserExtrReg.class, arrayLength);
	}
	public static class ByReference extends VlMserExtrReg implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends VlMserExtrReg implements com.sun.jna.Structure.ByValue {}
}
