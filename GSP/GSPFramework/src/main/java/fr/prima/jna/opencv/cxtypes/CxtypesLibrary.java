package fr.prima.jna.opencv.cxtypes;
/**
 * JNA Wrapper for library <b>cxtypes</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface CxtypesLibrary extends com.sun.jna.Library {
	public static final java.lang.String JNA_LIBRARY_NAME = com.ochafik.lang.jnaerator.runtime.LibraryExtractor.getLibraryPath("cxtypes", true, fr.prima.jna.opencv.cxtypes.CxtypesLibrary.class);
	public static final com.sun.jna.NativeLibrary JNA_NATIVE_LIB = com.sun.jna.NativeLibrary.getInstance(fr.prima.jna.opencv.cxtypes.CxtypesLibrary.JNA_LIBRARY_NAME, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final fr.prima.jna.opencv.cxtypes.CxtypesLibrary INSTANCE = (fr.prima.jna.opencv.cxtypes.CxtypesLibrary)com.sun.jna.Native.loadLibrary(fr.prima.jna.opencv.cxtypes.CxtypesLibrary.JNA_LIBRARY_NAME, fr.prima.jna.opencv.cxtypes.CxtypesLibrary.class, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SSE2 = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final double CV_PI = 3.141592653589793;
	/// <i>native declaration : cxtypes.h</i>
	public static final double CV_LOG2 = 0.6931471805599453;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_SIGN = -2147483648;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_1U = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_8U = 8;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_16U = 16;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_32F = 32;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DATA_ORDER_PIXEL = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DATA_ORDER_PLANE = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ORIGIN_TL = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ORIGIN_BL = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_4BYTES = 4;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_8BYTES = 8;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_16BYTES = 16;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_32BYTES = 32;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_BORDER_CONSTANT = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_BORDER_REPLICATE = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_BORDER_REFLECT = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_BORDER_WRAP = 3;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_IMAGE_HEADER = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_IMAGE_DATA = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_IMAGE_ROI = 4;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_BORDER_REFLECT_101 = 4;
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_IMAGE = "opencv-image";
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_64F = 64;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_CN_MAX = 64;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_CN_SHIFT = 3;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_8U = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_8S = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_16U = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_16S = 3;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_32S = 4;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_32F = 5;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_64F = 6;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_USRTYPE1 = 7;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_AUTO_STEP = 2147483647;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_CONT_FLAG_SHIFT = 14;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_TEMP_FLAG_SHIFT = 15;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAGIC_MASK = -65536;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_MAGIC_VAL = 1111621632;
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_MAT = "opencv-matrix";
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MATND_MAGIC_VAL = 1111687168;
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_MATND = "opencv-nd-matrix";
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAX_DIM = 32;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAX_DIM_HEAP = (1 << 16);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SPARSE_MAT_MAGIC_VAL = 1111752704;
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_SPARSE_MAT = "opencv-sparse-matrix";
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_MAGIC_VAL = 1111818240;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_UNIFORM_FLAG = (1 << 10);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_RANGES_FLAG = (1 << 11);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_ARRAY = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_SPARSE = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_UNIFORM = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_TERMCRIT_ITER = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_TERMCRIT_EPS = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_WHOLE_SEQ_END_INDEX = 1073741823;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_MAGIC_VAL = 1116274688;
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_SEQ = "opencv-sequence";
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_SEQ_TREE = "opencv-sequence-tree";
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SET_ELEM_IDX_MASK = ((1 << 26) - 1);
	/// <i>native declaration : cxtypes.h</i>
	public static final java.lang.String CV_TYPE_NAME_GRAPH = "opencv-graph";
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_MAGIC_VAL = 1117323264;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SET_MAGIC_VAL = 1117257728;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_BITS = 9;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_GENERIC = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_GRAPH_EDGE = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_GRAPH_VERTEX = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_TRIAN_ATR = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_CONNECTED_COMP = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_BITS = 3;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_READ = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_WRITE = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_APPEND = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_NONE = 0;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_INT = 1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_REAL = 2;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_STR = 3;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_REF = 4;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_SEQ = 5;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_MAP = 6;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_TYPE_MASK = 7;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_FLOW = 8;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_USER = 16;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_EMPTY = 32;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_NAMED = 64;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_SEQ_SIMPLE = 256;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_CN_MASK = ((fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_CN_MAX - 1) << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_CN_SHIFT);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_FLOAT = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_NODE_REAL;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_HIST_TREE = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_HIST_SPARSE;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_STRING = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_NODE_STR;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_CURVE = (1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_16S = (fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IPL_DEPTH_SIGN | 16);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_WRITE_BINARY = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_STORAGE_WRITE;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_NODE_INTEGER = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_NODE_INT;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_MASK = (((1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_KIND_BITS) - 1) << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_QWORD = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IPL_ALIGN_8BYTES;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_TEMP_FLAG = (1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_MAT_TEMP_FLAG_SHIFT);
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_32S = (fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IPL_DEPTH_SIGN | 32);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_TERMCRIT_NUMBER = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_TERMCRIT_ITER;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_GRAPH = (3 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_MASK = ((1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS) - 1);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_FLAG_SHIFT = (fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_KIND_BITS + fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_GENERIC = (0 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_ELTYPE_PTR = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_USRTYPE1;
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_ALIGN_DWORD = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IPL_ALIGN_4BYTES;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_MAT_CONT_FLAG = (1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_MAT_CONT_FLAG_SHIFT);
	/// <i>native declaration : cxtypes.h</i>
	public static final int IPL_DEPTH_8S = (fr.prima.jna.opencv.cxtypes.CxtypesLibrary.IPL_DEPTH_SIGN | 8);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_STORAGE_WRITE_TEXT = fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_STORAGE_WRITE;
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_DEPTH_MAX = (1 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_CN_SHIFT);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_SUBDIV2D = (4 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public static final int CV_SEQ_KIND_BIN_TREE = (2 << fr.prima.jna.opencv.cxtypes.CxtypesLibrary.CV_SEQ_ELTYPE_BITS);
	/// <i>native declaration : cxtypes.h</i>
	public interface CvIsInstanceFunc extends com.sun.jna.Callback {
		int invoke(com.sun.jna.Pointer struct_ptr);
	}
	/// <i>native declaration : cxtypes.h</i>
	public interface CvReleaseFunc extends com.sun.jna.Callback {
		void invoke(com.sun.jna.ptr.PointerByReference struct_dblptr);
	}
	/// <i>native declaration : cxtypes.h</i>
	public interface CvReadFunc extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(fr.prima.jna.opencv.cxcore.CxcoreLibrary.CvFileStorage storage, fr.prima.jna.opencv.cxtypes.CvFileNode node);
	}
	/// <i>native declaration : cxtypes.h</i>
	public interface CvWriteFunc extends com.sun.jna.Callback {
		void invoke(fr.prima.jna.opencv.cxcore.CxcoreLibrary.CvFileStorage storage, com.sun.jna.Pointer name, com.sun.jna.Pointer struct_ptr, fr.prima.jna.opencv.cxtypes.CvAttrList.ByValue attributes);
	}
	/// <i>native declaration : cxtypes.h</i>
	public interface CvCloneFunc extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.sun.jna.Pointer struct_ptr);
	}
	/**
	 * Original signature : <code>int cvRound(double)</code><br>
	 * <i>native declaration : cxtypes.h:180</i>
	 */
	int cvRound(double value);
	/**
	 * Original signature : <code>int cvFloor(double)</code><br>
	 * <i>native declaration : cxtypes.h:207</i>
	 */
	int cvFloor(double value);
	/**
	 * Original signature : <code>int cvCeil(double)</code><br>
	 * <i>native declaration : cxtypes.h:222</i>
	 */
	int cvCeil(double value);
	/**
	 * Original signature : <code>int cvIsNaN(double)</code><br>
	 * <i>native declaration : cxtypes.h:239</i>
	 */
	int cvIsNaN(double value);
	/**
	 * Original signature : <code>int cvIsInf(double)</code><br>
	 * <i>native declaration : cxtypes.h:250</i>
	 */
	int cvIsInf(double value);
	/**
	 * Original signature : <code>CvRNG cvRNG(int64)</code><br>
	 * <i>native declaration : cxtypes.h:265</i>
	 */
	long cvRNG(long seed);
	/**
	 * returns random 32-bit unsigned integer<br>
	 * Original signature : <code>cvRandInt(CvRNG*)</code><br>
	 * <i>native declaration : cxtypes.h:272</i><br>
	 * @deprecated use the safer methods {@link #cvRandInt(java.nio.LongBuffer)} and {@link #cvRandInt(com.sun.jna.ptr.LongByReference)} instead
	 */
	@java.lang.Deprecated
	int cvRandInt(com.sun.jna.ptr.LongByReference rng);
	/**
	 * returns random 32-bit unsigned integer<br>
	 * Original signature : <code>cvRandInt(CvRNG*)</code><br>
	 * <i>native declaration : cxtypes.h:272</i>
	 */
	int cvRandInt(java.nio.LongBuffer rng);
	/**
	 * returns random floating-point number between 0 and 1<br>
	 * Original signature : <code>double cvRandReal(CvRNG*)</code><br>
	 * <i>native declaration : cxtypes.h:281</i><br>
	 * @deprecated use the safer methods {@link #cvRandReal(java.nio.LongBuffer)} and {@link #cvRandReal(com.sun.jna.ptr.LongByReference)} instead
	 */
	@java.lang.Deprecated
	double cvRandReal(com.sun.jna.ptr.LongByReference rng);
	/**
	 * returns random floating-point number between 0 and 1<br>
	 * Original signature : <code>double cvRandReal(CvRNG*)</code><br>
	 * <i>native declaration : cxtypes.h:281</i>
	 */
	double cvRandReal(java.nio.LongBuffer rng);
	/**
	 * inline constructor. No data is allocated internally!!!<br>
	 * (use together with cvCreateData, or use cvCreateMat instead to<br>
	 * get a matrix with allocated data)<br>
	 * Original signature : <code>CvMat cvMat(int, int, int, void*)</code><br>
	 * <i>native declaration : cxtypes.h:582</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvMat.ByValue cvMat(int rows, int cols, int type, com.sun.jna.Pointer data);
	/**
	 * Original signature : <code>double cvmGet(const CvMat*, int, int)</code><br>
	 * <i>native declaration : cxtypes.h:612</i>
	 */
	double cvmGet(fr.prima.jna.opencv.cxtypes.CvMat mat, int row, int col);
	/**
	 * Original signature : <code>void cvmSet(CvMat*, int, int, double)</code><br>
	 * <i>native declaration : cxtypes.h:629</i>
	 */
	void cvmSet(fr.prima.jna.opencv.cxtypes.CvMat mat, int row, int col, double value);
	/**
	 * Original signature : <code>int cvCvToIplDepth(int)</code><br>
	 * <i>native declaration : cxtypes.h:645</i>
	 */
	int cvCvToIplDepth(int type);
	/**
	 * Original signature : <code>CvRect cvRect(int, int, int, int)</code><br>
	 * <i>native declaration : cxtypes.h:807</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvRect.ByValue cvRect(int x, int y, int width, int height);
	/**
	 * Original signature : <code>IplROI cvRectToROI(CvRect, int)</code><br>
	 * <i>native declaration : cxtypes.h:820</i>
	 */
	fr.prima.jna.opencv.cxtypes.IplROI.ByValue cvRectToROI(fr.prima.jna.opencv.cxtypes.CvRect.ByValue rect, int coi);
	/**
	 * Original signature : <code>CvRect cvROIToRect(IplROI)</code><br>
	 * <i>native declaration : cxtypes.h:833</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvRect.ByValue cvROIToRect(fr.prima.jna.opencv.cxtypes.IplROI.ByValue roi);
	/**
	 * Original signature : <code>CvTermCriteria cvTermCriteria(int, int, double)</code><br>
	 * <i>native declaration : cxtypes.h:854</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvTermCriteria.ByValue cvTermCriteria(int type, int max_iter, double epsilon);
	/**
	 * Original signature : <code>CvPoint cvPoint(int, int)</code><br>
	 * <i>native declaration : cxtypes.h:876</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint.ByValue cvPoint(int x, int y);
	/**
	 * Original signature : <code>CvPoint2D32f cvPoint2D32f(double, double)</code><br>
	 * <i>native declaration : cxtypes.h:895</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint2D32f.ByValue cvPoint2D32f(double x, double y);
	/**
	 * Original signature : <code>CvPoint2D32f cvPointTo32f(CvPoint)</code><br>
	 * <i>native declaration : cxtypes.h:906</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint2D32f.ByValue cvPointTo32f(fr.prima.jna.opencv.cxtypes.CvPoint.ByValue point);
	/**
	 * Original signature : <code>CvPoint cvPointFrom32f(CvPoint2D32f)</code><br>
	 * <i>native declaration : cxtypes.h:912</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint.ByValue cvPointFrom32f(fr.prima.jna.opencv.cxtypes.CvPoint2D32f.ByValue point);
	/**
	 * Original signature : <code>CvPoint3D32f cvPoint3D32f(double, double, double)</code><br>
	 * <i>native declaration : cxtypes.h:931</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint3D32f.ByValue cvPoint3D32f(double x, double y, double z);
	/**
	 * Original signature : <code>CvPoint2D64f cvPoint2D64f(double, double)</code><br>
	 * <i>native declaration : cxtypes.h:951</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint2D64f.ByValue cvPoint2D64f(double x, double y);
	/**
	 * Original signature : <code>CvPoint3D64f cvPoint3D64f(double, double, double)</code><br>
	 * <i>native declaration : cxtypes.h:971</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvPoint3D64f.ByValue cvPoint3D64f(double x, double y, double z);
	/**
	 * Original signature : <code>CvSize cvSize(int, int)</code><br>
	 * <i>native declaration : cxtypes.h:992</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvSize.ByValue cvSize(int width, int height);
	/**
	 * Original signature : <code>CvSize2D32f cvSize2D32f(double, double)</code><br>
	 * <i>native declaration : cxtypes.h:1010</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvSize2D32f.ByValue cvSize2D32f(double width, double height);
	/**
	 * Original signature : <code>CvSlice cvSlice(int, int)</code><br>
	 * <i>native declaration : cxtypes.h:1055</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvSlice.ByValue cvSlice(int start, int end);
	/**
	 * Original signature : <code>CvScalar cvScalar(double, double, double, double)</code><br>
	 * <i>native declaration : cxtypes.h:1076</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvScalar.ByValue cvScalar(double val0, double val1, double val2, double val3);
	/**
	 * Original signature : <code>CvScalar cvRealScalar(double)</code><br>
	 * <i>native declaration : cxtypes.h:1086</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvScalar.ByValue cvRealScalar(double val0);
	/**
	 * Original signature : <code>CvScalar cvScalarAll(double)</code><br>
	 * <i>native declaration : cxtypes.h:1094</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvScalar.ByValue cvScalarAll(double val0123);
	/**
	 * Original signature : <code>CvAttrList cvAttrList(const char**, CvAttrList*)</code><br>
	 * <i>native declaration : cxtypes.h:1602</i><br>
	 * @deprecated use the safer methods {@link #cvAttrList(java.lang.String[], fr.prima.jna.opencv.cxtypes.CvAttrList)} and {@link #cvAttrList(com.sun.jna.ptr.PointerByReference, fr.prima.jna.opencv.cxtypes.CvAttrList)} instead
	 */
	@java.lang.Deprecated
	fr.prima.jna.opencv.cxtypes.CvAttrList.ByValue cvAttrList(com.sun.jna.ptr.PointerByReference attr, fr.prima.jna.opencv.cxtypes.CvAttrList next);
	/**
	 * Original signature : <code>CvAttrList cvAttrList(const char**, CvAttrList*)</code><br>
	 * <i>native declaration : cxtypes.h:1602</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvAttrList.ByValue cvAttrList(java.lang.String attr[], fr.prima.jna.opencv.cxtypes.CvAttrList next);
	/// Pointer to unknown (opaque) type
	public static class IplTileInfo extends com.sun.jna.PointerType {
		public IplTileInfo(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public IplTileInfo() {
			super();
		}
	}
	/// Pointer to unknown (opaque) type
	public static class CvGenericHash extends com.sun.jna.PointerType {
		public CvGenericHash(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public CvGenericHash() {
			super();
		}
	}
}
