package fr.prima.jna.vlfeat;
/**
 * JNA Wrapper for library <b>VLFeat</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface VLFeatLibrary extends com.sun.jna.Library {
	public static final java.lang.String JNA_LIBRARY_NAME = com.ochafik.lang.jnaerator.runtime.LibraryExtractor.getLibraryPath("VLFeat", true, fr.prima.jna.vlfeat.VLFeatLibrary.class);
	public static final com.sun.jna.NativeLibrary JNA_NATIVE_LIB = com.sun.jna.NativeLibrary.getInstance(fr.prima.jna.vlfeat.VLFeatLibrary.JNA_LIBRARY_NAME, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final fr.prima.jna.vlfeat.VLFeatLibrary INSTANCE = (fr.prima.jna.vlfeat.VLFeatLibrary)com.sun.jna.Native.loadLibrary(fr.prima.jna.vlfeat.VLFeatLibrary.JNA_LIBRARY_NAME, fr.prima.jna.vlfeat.VLFeatLibrary.class, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	/**
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:25</i><br>
	 * enum values
	 */
	public static interface VlIKMAlgorithms {
		/// < Lloyd algorithm
		public static final int VL_IKM_LLOYD = 0;
		/// < Elkan algorithm
		public static final int VL_IKM_ELKAN = 1;
	}
	/**
	 * < unknown protocol<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:28</i>
	 */
	public static final int VL_PROT_UNKNOWN = -1;
	/**
	 * < no protocol<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:29</i>
	 */
	public static final int VL_PROT_NONE = 0;
	/**
	 * < ASCII protocol<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:30</i>
	 */
	public static final int VL_PROT_ASCII = 1;
	/**
	 * < Binary protocol<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:31</i>
	 */
	public static final int VL_PROT_BINARY = 2;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final java.lang.String VL_VERSION_STRING = "0.9.4";
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_MSG_LEN = 1024;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_OK = 0;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_OVERFLOW = 1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_ALLOC = 2;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_BAD_ARG = 3;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_IO = 4;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_EOF = 5;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public static final int VL_ERR_NO_MORE = 5;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/getopt_long.h</i>
	public static final int no_argument = 0;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/getopt_long.h</i>
	public static final int required_argument = 1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/getopt_long.h</i>
	public static final int optional_argument = 2;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_OS_WIN = 1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_ARCH_IX86 = 300;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_TRUE = 1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_FALSE = 0;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final java.lang.String VL_FL_INT64 = "ll";
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final java.lang.String VL_FL_INT16 = "h";
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final java.lang.String VL_FL_INT8 = "hh";
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_BIG_INT = 2147483647;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_BIG_UINT = -1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h</i>
	public static final int VL_CONV_ZERO = 0;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h</i>
	public static final int VL_CONV_CIRC = 1;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h</i>
	public static final int VL_CONV_CONT = 2;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h</i>
	public static final int VL_PAD_BY_ZERO = (0 << 0);
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h</i>
	public static final int VL_PAD_BY_CONTINUITY = (1 << 0);
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h</i>
	public static final int VL_PAD_MASK = (3);
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h</i>
	public static final int VL_TRANSPOSE = (1 << 2);
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/mathop.h</i>
	public static final double VL_LOG_OF_2 = 0.693147180559945;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/mathop.h</i>
	public static final double VL_PI = 3.141592653589793;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/mathop.h</i>
	public static final float VL_EPSILON_F = 1.1920929E-7F;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/mathop.h</i>
	public static final double VL_EPSILON_D = 2.220446049250313E-16;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h</i>
	public static final int VL_MSER_PIX_MAXVAL = 256;
	/**
	 * define<br>
	 * Conversion Error : null<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h</i><br>
	 * (null << 32) - 1
	 */
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h</i>
	public static final int VL_ERR_PGM_INV_HEAD = 101;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h</i>
	public static final int VL_ERR_PGM_INV_META = 102;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h</i>
	public static final int VL_ERR_PGM_INV_DATA = 103;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h</i>
	public static final int VL_ERR_PGM_IO = 104;
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h</i>
	public static final int VL_SMALL_INT = (fr.prima.jna.vlfeat.VLFeatLibrary.VL_BIG_INT - 1);
	/**
	 * ------------------------------------------------------------------<br>
	 * * @brief Customizable printf function pointer type<br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	 */
	public interface printf_func_t extends com.sun.jna.Callback {
		int invoke(com.sun.jna.Pointer format, java.lang.Object... varargs);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:116</i>
	public interface malloc_func extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.ochafik.lang.jnaerator.runtime.NativeSize size_t1);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:117</i>
	public interface realloc_func extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.sun.jna.Pointer voidPtr1, com.ochafik.lang.jnaerator.runtime.NativeSize size_t1);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:118</i>
	public interface calloc_func extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.ochafik.lang.jnaerator.runtime.NativeSize size_t1, com.ochafik.lang.jnaerator.runtime.NativeSize size_t2);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:119</i>
	public interface free_func extends com.sun.jna.Callback {
		void invoke(com.sun.jna.Pointer voidPtr1);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public interface int_callback extends com.sun.jna.Callback {
		/**
		 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i><br>
		 * Conversion Error : extern VL_EXPORT
		 */
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:224</i>
	public interface vl_malloc_func_callback extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.ochafik.lang.jnaerator.runtime.NativeSize size_t1);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:225</i>
	public interface vl_realloc_func_callback extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.sun.jna.Pointer voidPtr1, com.ochafik.lang.jnaerator.runtime.NativeSize size_t1);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:226</i>
	public interface vl_calloc_func_callback extends com.sun.jna.Callback {
		com.sun.jna.Pointer invoke(com.ochafik.lang.jnaerator.runtime.NativeSize size_t1, com.ochafik.lang.jnaerator.runtime.NativeSize size_t2);
	}
	/// <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i>
	public interface void_callback extends com.sun.jna.Callback {
		/**
		 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h</i><br>
		 * Conversion Error : extern VL_EXPORT
		 */
	}
	/**
	 * Original signature : <code>VlAIB* vl_aib_new(double*, vl_uint, vl_uint)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:62</i><br>
	 * @deprecated use the safer methods {@link #vl_aib_new(java.nio.DoubleBuffer, int, int)} and {@link #vl_aib_new(com.sun.jna.ptr.DoubleByReference, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z10vl_aib_newPdjj", "?vl_aib_new@@YAPA5VlAIBPANII@Z"})
	@java.lang.Deprecated
	fr.prima.jna.vlfeat.VlAIB vl_aib_new(com.sun.jna.ptr.DoubleByReference Pcx, int nvalues, int nlabels);
	/**
	 * Original signature : <code>VlAIB* vl_aib_new(double*, vl_uint, vl_uint)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:62</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z10vl_aib_newPdjj", "?vl_aib_new@@YAPA5VlAIBPANII@Z"})
	fr.prima.jna.vlfeat.VlAIB vl_aib_new(java.nio.DoubleBuffer Pcx, int nvalues, int nlabels);
	/**
	 * Original signature : <code>void vl_aib_delete(VlAIB*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:65</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_aib_deleteP5VlAIB", "?vl_aib_delete@@YAXPA5VlAIB@Z"})
	void vl_aib_delete(fr.prima.jna.vlfeat.VlAIB aib);
	/**
	 * Original signature : <code>void vl_aib_process(VlAIB*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:73</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_aib_processP5VlAIB", "?vl_aib_process@@YAXPA5VlAIB@Z"})
	void vl_aib_process(fr.prima.jna.vlfeat.VlAIB aib);
	/**
	 * Original signature : <code>vl_uint* vl_aib_get_parents(const VlAIB*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:80</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_aib_get_parentsPK5VlAIB", "?vl_aib_get_parents@@YAPAIPA5VlAIB@Z"})
	com.sun.jna.ptr.IntByReference vl_aib_get_parents(fr.prima.jna.vlfeat.VlAIB aib);
	/**
	 * Original signature : <code>double* vl_aib_get_costs(const VlAIB*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h:81</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_aib_get_costsPK5VlAIB", "?vl_aib_get_costs@@YAPANPA5VlAIB@Z"})
	com.sun.jna.ptr.DoubleByReference vl_aib_get_costs(fr.prima.jna.vlfeat.VlAIB aib);
	/**
	 * Original signature : <code>VlDsiftFilter* vl_dsift_new(int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:69</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_dsift_newii", "?vl_dsift_new@@YAPA13VlDsiftFilterHH@Z"})
	fr.prima.jna.vlfeat.VlDsiftFilter vl_dsift_new(int width, int height);
	/**
	 * Original signature : <code>VlDsiftFilter* vl_dsift_new_basic(int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:70</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_dsift_new_basiciiii", "?vl_dsift_new_basic@@YAPA13VlDsiftFilterHHHH@Z"})
	fr.prima.jna.vlfeat.VlDsiftFilter vl_dsift_new_basic(int width, int height, int step, int binSize);
	/**
	 * Original signature : <code>void vl_dsift_delete(VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:71</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_dsift_deleteP13VlDsiftFilter", "?vl_dsift_delete@@YAXPA13VlDsiftFilter@Z"})
	void vl_dsift_delete(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>void vl_dsift_process(VlDsiftFilter*, const float*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:72</i><br>
	 * @deprecated use the safer methods {@link #vl_dsift_process(fr.prima.jna.vlfeat.VlDsiftFilter, float[])} and {@link #vl_dsift_process(fr.prima.jna.vlfeat.VlDsiftFilter, com.sun.jna.ptr.FloatByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_dsift_processP13VlDsiftFilterPKf", "?vl_dsift_process@@YAXPA13VlDsiftFilterPAM@Z"})
	@java.lang.Deprecated
	void vl_dsift_process(fr.prima.jna.vlfeat.VlDsiftFilter self, com.sun.jna.ptr.FloatByReference im);
	/**
	 * Original signature : <code>void vl_dsift_process(VlDsiftFilter*, const float*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:72</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_dsift_processP13VlDsiftFilterPKf", "?vl_dsift_process@@YAXPA13VlDsiftFilterPAM@Z"})
	void vl_dsift_process(fr.prima.jna.vlfeat.VlDsiftFilter self, float im[]);
	/**
	 * Original signature : <code>void vl_dsift_transpose_descriptor(float*, const float*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:73</i><br>
	 * @deprecated use the safer methods {@link #vl_dsift_transpose_descriptor(java.nio.FloatBuffer, float[], int, int, int)} and {@link #vl_dsift_transpose_descriptor(com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z29vl_dsift_transpose_descriptorPfPKfiii", "?vl_dsift_transpose_descriptor@@YAXPAMPAMHHH@Z"})
	@java.lang.Deprecated
	void vl_dsift_transpose_descriptor(com.sun.jna.ptr.FloatByReference dst, com.sun.jna.ptr.FloatByReference src, int numBinT, int numBinX, int numBinY);
	/**
	 * Original signature : <code>void vl_dsift_transpose_descriptor(float*, const float*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:73</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z29vl_dsift_transpose_descriptorPfPKfiii", "?vl_dsift_transpose_descriptor@@YAXPAMPAMHHH@Z"})
	void vl_dsift_transpose_descriptor(java.nio.FloatBuffer dst, float src[], int numBinT, int numBinX, int numBinY);
	/**
	 * Original signature : <code>void vl_dsift_set_steps(VlDsiftFilter*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:82</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_dsift_set_stepsP13VlDsiftFilterii", "?vl_dsift_set_steps@@YAXPA13VlDsiftFilterHH@Z"})
	void vl_dsift_set_steps(fr.prima.jna.vlfeat.VlDsiftFilter self, int stepX, int stepY);
	/**
	 * Original signature : <code>void vl_dsift_set_bounds(VlDsiftFilter*, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:85</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_dsift_set_boundsP13VlDsiftFilteriiii", "?vl_dsift_set_bounds@@YAXPA13VlDsiftFilterHHHH@Z"})
	void vl_dsift_set_bounds(fr.prima.jna.vlfeat.VlDsiftFilter self, int minX, int minY, int maxX, int maxY);
	/**
	 * Original signature : <code>void vl_dsift_set_geometry(VlDsiftFilter*, const VlDsiftDescriptorGeometry*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:90</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_dsift_set_geometryP13VlDsiftFilterPK25VlDsiftDescriptorGeometry", "?vl_dsift_set_geometry@@YAXPA13VlDsiftFilterPA25VlDsiftDescriptorGeometry@Z"})
	void vl_dsift_set_geometry(fr.prima.jna.vlfeat.VlDsiftFilter self, fr.prima.jna.vlfeat.VlDsiftDescriptorGeometry geom);
	/**
	 * Original signature : <code>void vl_dsift_set_flat_window(VlDsiftFilter*, vl_bool)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:92</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24vl_dsift_set_flat_windowP13VlDsiftFilteri", "?vl_dsift_set_flat_window@@YAXPA13VlDsiftFilterH@Z"})
	void vl_dsift_set_flat_window(fr.prima.jna.vlfeat.VlDsiftFilter self, int flatWindow);
	/**
	 * Original signature : <code>const float* vl_dsift_get_descriptors(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:98</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24vl_dsift_get_descriptorsPK13VlDsiftFilter", "?vl_dsift_get_descriptors@@YAPAMPA13VlDsiftFilter@Z"})
	com.sun.jna.ptr.FloatByReference vl_dsift_get_descriptors(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>int vl_dsift_get_descriptor_size(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:99</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z28vl_dsift_get_descriptor_sizePK13VlDsiftFilter", "?vl_dsift_get_descriptor_size@@YAHPA13VlDsiftFilter@Z"})
	int vl_dsift_get_descriptor_size(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>int vl_dsift_get_keypoint_num(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:100</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z25vl_dsift_get_keypoint_numPK13VlDsiftFilter", "?vl_dsift_get_keypoint_num@@YAHPA13VlDsiftFilter@Z"})
	int vl_dsift_get_keypoint_num(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>const VlDsiftKeypoint* vl_dsift_get_keypoints(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:101</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z22vl_dsift_get_keypointsPK13VlDsiftFilter", "?vl_dsift_get_keypoints@@YAPA15VlDsiftKeypointPA13VlDsiftFilter@Z"})
	fr.prima.jna.vlfeat.VlDsiftKeypoint vl_dsift_get_keypoints(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>void vl_dsift_get_bounds(const VlDsiftFilter*, int*, int*, int*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:102</i><br>
	 * @deprecated use the safer methods {@link #vl_dsift_get_bounds(fr.prima.jna.vlfeat.VlDsiftFilter, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #vl_dsift_get_bounds(fr.prima.jna.vlfeat.VlDsiftFilter, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_dsift_get_boundsPK13VlDsiftFilterPiPiPiPi", "?vl_dsift_get_bounds@@YAXPA13VlDsiftFilterPAHPAHPAHPAH@Z"})
	@java.lang.Deprecated
	void vl_dsift_get_bounds(fr.prima.jna.vlfeat.VlDsiftFilter self, com.sun.jna.ptr.IntByReference minX, com.sun.jna.ptr.IntByReference minY, com.sun.jna.ptr.IntByReference maxX, com.sun.jna.ptr.IntByReference maxY);
	/**
	 * Original signature : <code>void vl_dsift_get_bounds(const VlDsiftFilter*, int*, int*, int*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:102</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_dsift_get_boundsPK13VlDsiftFilterPiPiPiPi", "?vl_dsift_get_bounds@@YAXPA13VlDsiftFilterPAHPAHPAHPAH@Z"})
	void vl_dsift_get_bounds(fr.prima.jna.vlfeat.VlDsiftFilter self, java.nio.IntBuffer minX, java.nio.IntBuffer minY, java.nio.IntBuffer maxX, java.nio.IntBuffer maxY);
	/**
	 * Original signature : <code>void vl_dsift_get_steps(const VlDsiftFilter*, int*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:107</i><br>
	 * @deprecated use the safer methods {@link #vl_dsift_get_steps(fr.prima.jna.vlfeat.VlDsiftFilter, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #vl_dsift_get_steps(fr.prima.jna.vlfeat.VlDsiftFilter, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_dsift_get_stepsPK13VlDsiftFilterPiPi", "?vl_dsift_get_steps@@YAXPA13VlDsiftFilterPAHPAH@Z"})
	@java.lang.Deprecated
	void vl_dsift_get_steps(fr.prima.jna.vlfeat.VlDsiftFilter self, com.sun.jna.ptr.IntByReference stepX, com.sun.jna.ptr.IntByReference stepY);
	/**
	 * Original signature : <code>void vl_dsift_get_steps(const VlDsiftFilter*, int*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:107</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_dsift_get_stepsPK13VlDsiftFilterPiPi", "?vl_dsift_get_steps@@YAXPA13VlDsiftFilterPAHPAH@Z"})
	void vl_dsift_get_steps(fr.prima.jna.vlfeat.VlDsiftFilter self, java.nio.IntBuffer stepX, java.nio.IntBuffer stepY);
	/**
	 * Original signature : <code>const VlDsiftDescriptorGeometry* vl_dsift_get_geometry(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:110</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_dsift_get_geometryPK13VlDsiftFilter", "?vl_dsift_get_geometry@@YAPA25VlDsiftDescriptorGeometryPA13VlDsiftFilter@Z"})
	fr.prima.jna.vlfeat.VlDsiftDescriptorGeometry vl_dsift_get_geometry(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>vl_bool vl_dsift_get_flat_window(const VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:111</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24vl_dsift_get_flat_windowPK13VlDsiftFilter", "?vl_dsift_get_flat_window@@YAHPA13VlDsiftFilter@Z"})
	int vl_dsift_get_flat_window(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>void _vl_dsift_update_buffers(VlDsiftFilter*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/dsift.h:115</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24_vl_dsift_update_buffersP13VlDsiftFilter", "?_vl_dsift_update_buffers@@YAXPA13VlDsiftFilter@Z"})
	void _vl_dsift_update_buffers(fr.prima.jna.vlfeat.VlDsiftFilter self);
	/**
	 * Original signature : <code>void vl_set_alloc_func(malloc_func, realloc_func, calloc_func, free_func)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:116</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_set_alloc_funcPFPv6size_tEPFPvPv6size_tEPFPv6size_t6size_tEPFvPvE", "?vl_set_alloc_func@@YAXPFPAX6size_t@EPFPAXPAX6size_t@EPFPAX6size_t6size_t@EPFXPAX@E@Z"})
	void vl_set_alloc_func(fr.prima.jna.vlfeat.VLFeatLibrary.malloc_func arg1, fr.prima.jna.vlfeat.VLFeatLibrary.realloc_func arg2, fr.prima.jna.vlfeat.VLFeatLibrary.calloc_func arg3, fr.prima.jna.vlfeat.VLFeatLibrary.free_func arg4);
	/**
	 * Original signature : <code>void* vl_malloc(size_t)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:120</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z9vl_malloc6size_t", "?vl_malloc@@YAPAX6size_t@Z"})
	com.sun.jna.Pointer vl_malloc(com.ochafik.lang.jnaerator.runtime.NativeSize n);
	/**
	 * Original signature : <code>void* vl_realloc(void*, size_t)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:121</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z10vl_reallocPv6size_t", "?vl_realloc@@YAPAXPAX6size_t@Z"})
	com.sun.jna.Pointer vl_realloc(com.sun.jna.Pointer ptr, com.ochafik.lang.jnaerator.runtime.NativeSize n);
	/**
	 * Original signature : <code>void* vl_calloc(size_t, size_t)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:122</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z9vl_calloc6size_t6size_t", "?vl_calloc@@YAPAX6size_t6size_t@Z"})
	com.sun.jna.Pointer vl_calloc(com.ochafik.lang.jnaerator.runtime.NativeSize n, com.ochafik.lang.jnaerator.runtime.NativeSize size);
	/**
	 * Original signature : <code>void vl_free(void*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:123</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z7vl_freePv", "?vl_free@@YAXPAX@Z"})
	void vl_free(com.sun.jna.Pointer ptr);
	/**
	 * Original signature : <code>void vl_set_printf_func(printf_func_t)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:139</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_set_printf_func13printf_func_t", "?vl_set_printf_func@@YAX13printf_func_t@Z"})
	void vl_set_printf_func(fr.prima.jna.vlfeat.VLFeatLibrary.printf_func_t printf_func);
	/**
	 * Original signature : <code>const char* vl_get_version_string()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:210</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_get_version_stringv", "?vl_get_version_string@@YAPADXZ"})
	java.lang.String vl_get_version_string();
	/**
	 * Original signature : <code>void vl_print_info()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:213</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_print_infov", "?vl_print_info@@YAXXZ"})
	void vl_print_info();
	/**
	 * Original signature : <code>void vl_tic()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:219</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z6vl_ticv", "?vl_tic@@YAXXZ"})
	void vl_tic();
	/**
	 * Original signature : <code>double vl_toc()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:220</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z6vl_tocv", "?vl_toc@@YANXZ"})
	double vl_toc();
	/**
	 * Original signature : <code>int_callback int(null*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:223</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z3intPv", "?int@@YAPF9VL_EXPORTPADX@EPAX@Z"})
	fr.prima.jna.vlfeat.VLFeatLibrary.int_callback int_(com.sun.jna.Pointer vl_printf_func);
	/**
	 * Original signature : <code>void_callback void(null*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/generic.h:227</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z4voidPv", "?void@@YAPF9VL_EXPORTPAX@EPAX@Z"})
	fr.prima.jna.vlfeat.VLFeatLibrary.void_callback void_(com.sun.jna.Pointer vl_free_func);
	/**
	 * Original signature : <code>int getopt_long(int, char*[], const char*, option*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/getopt_long.h:39</i><br>
	 * @deprecated use the safer methods {@link #getopt_long(int, com.sun.jna.ptr.PointerByReference, java.lang.String, fr.prima.jna.vlfeat.option, java.nio.IntBuffer)} and {@link #getopt_long(int, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, fr.prima.jna.vlfeat.option, com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11getopt_longiPPcPKcP6optionPi", "?getopt_long@@YAHHQAPADPADPA6optionPAH@Z"})
	@java.lang.Deprecated
	int getopt_long(int argc, com.sun.jna.ptr.PointerByReference argv, com.sun.jna.Pointer optstring, fr.prima.jna.vlfeat.option longopts, com.sun.jna.ptr.IntByReference longindex);
	/**
	 * Original signature : <code>int getopt_long(int, char*[], const char*, option*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/getopt_long.h:39</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11getopt_longiPPcPKcP6optionPi", "?getopt_long@@YAHHQAPADPADPA6optionPAH@Z"})
	int getopt_long(int argc, com.sun.jna.ptr.PointerByReference argv, java.lang.String optstring, fr.prima.jna.vlfeat.option longopts, java.nio.IntBuffer longindex);
	/**
	 * Original signature : <code>VlHIKMTree* vl_hikm_new(int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:47</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_hikm_newi", "?vl_hikm_new@@YAPA10VlHIKMTreeH@Z"})
	fr.prima.jna.vlfeat.VlHIKMTree vl_hikm_new(int method);
	/**
	 * Original signature : <code>void vl_hikm_delete(VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:48</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_hikm_deleteP10VlHIKMTree", "?vl_hikm_delete@@YAXPA10VlHIKMTree@Z"})
	void vl_hikm_delete(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>int vl_hikm_get_ndims(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:54</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_hikm_get_ndimsPK10VlHIKMTree", "?vl_hikm_get_ndims@@YAHPA10VlHIKMTree@Z"})
	int vl_hikm_get_ndims(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>int vl_hikm_get_K(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:55</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_hikm_get_KPK10VlHIKMTree", "?vl_hikm_get_K@@YAHPA10VlHIKMTree@Z"})
	int vl_hikm_get_K(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>int vl_hikm_get_depth(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:56</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_hikm_get_depthPK10VlHIKMTree", "?vl_hikm_get_depth@@YAHPA10VlHIKMTree@Z"})
	int vl_hikm_get_depth(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>int vl_hikm_get_verbosity(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:57</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_hikm_get_verbosityPK10VlHIKMTree", "?vl_hikm_get_verbosity@@YAHPA10VlHIKMTree@Z"})
	int vl_hikm_get_verbosity(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>int vl_hikm_get_max_niters(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:58</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z22vl_hikm_get_max_nitersPK10VlHIKMTree", "?vl_hikm_get_max_niters@@YAHPA10VlHIKMTree@Z"})
	int vl_hikm_get_max_niters(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>const VlHIKMNode* vl_hikm_get_root(const VlHIKMTree*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:59</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_hikm_get_rootPK10VlHIKMTree", "?vl_hikm_get_root@@YAPA10VlHIKMNodePA10VlHIKMTree@Z"})
	fr.prima.jna.vlfeat.VlHIKMNode vl_hikm_get_root(fr.prima.jna.vlfeat.VlHIKMTree f);
	/**
	 * Original signature : <code>void vl_hikm_set_verbosity(VlHIKMTree*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:65</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_hikm_set_verbosityP10VlHIKMTreei", "?vl_hikm_set_verbosity@@YAXPA10VlHIKMTreeH@Z"})
	void vl_hikm_set_verbosity(fr.prima.jna.vlfeat.VlHIKMTree f, int verb);
	/**
	 * Original signature : <code>void vl_hikm_set_max_niters(VlHIKMTree*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:66</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z22vl_hikm_set_max_nitersP10VlHIKMTreei", "?vl_hikm_set_max_niters@@YAXPA10VlHIKMTreeH@Z"})
	void vl_hikm_set_max_niters(fr.prima.jna.vlfeat.VlHIKMTree f, int max_niters);
	/**
	 * Original signature : <code>void vl_hikm_init(VlHIKMTree*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:72</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_hikm_initP10VlHIKMTreeiii", "?vl_hikm_init@@YAXPA10VlHIKMTreeHHH@Z"})
	void vl_hikm_init(fr.prima.jna.vlfeat.VlHIKMTree f, int M, int K, int depth);
	/**
	 * Original signature : <code>void vl_hikm_train(VlHIKMTree*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:73</i><br>
	 * @deprecated use the safer methods {@link #vl_hikm_train(fr.prima.jna.vlfeat.VlHIKMTree, java.nio.ByteBuffer, int)} and {@link #vl_hikm_train(fr.prima.jna.vlfeat.VlHIKMTree, com.sun.jna.Pointer, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_hikm_trainP10VlHIKMTreePKhi", "?vl_hikm_train@@YAXPA10VlHIKMTreePAEH@Z"})
	@java.lang.Deprecated
	void vl_hikm_train(fr.prima.jna.vlfeat.VlHIKMTree f, com.sun.jna.Pointer data, int N);
	/**
	 * Original signature : <code>void vl_hikm_train(VlHIKMTree*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:73</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_hikm_trainP10VlHIKMTreePKhi", "?vl_hikm_train@@YAXPA10VlHIKMTreePAEH@Z"})
	void vl_hikm_train(fr.prima.jna.vlfeat.VlHIKMTree f, java.nio.ByteBuffer data, int N);
	/**
	 * Original signature : <code>void vl_hikm_push(VlHIKMTree*, vl_uint*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:74</i><br>
	 * @deprecated use the safer methods {@link #vl_hikm_push(fr.prima.jna.vlfeat.VlHIKMTree, java.nio.IntBuffer, java.nio.ByteBuffer, int)} and {@link #vl_hikm_push(fr.prima.jna.vlfeat.VlHIKMTree, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_hikm_pushP10VlHIKMTreePjPKhi", "?vl_hikm_push@@YAXPA10VlHIKMTreePAIPAEH@Z"})
	@java.lang.Deprecated
	void vl_hikm_push(fr.prima.jna.vlfeat.VlHIKMTree f, com.sun.jna.ptr.IntByReference asgn, com.sun.jna.Pointer data, int N);
	/**
	 * Original signature : <code>void vl_hikm_push(VlHIKMTree*, vl_uint*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/hikmeans.h:74</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_hikm_pushP10VlHIKMTreePjPKhi", "?vl_hikm_push@@YAXPA10VlHIKMTreePAIPAEH@Z"})
	void vl_hikm_push(fr.prima.jna.vlfeat.VlHIKMTree f, java.nio.IntBuffer asgn, java.nio.ByteBuffer data, int N);
	/**
	 * ------------------------------------------------------------------<br>
	 * * @name Obtaining host info at run time<br>
	 * * @{<br>
	 * Original signature : <code>void vl_print_host_info()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h:276</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_print_host_infov", "?vl_print_host_info@@YAXXZ"})
	void vl_print_host_info();
	/**
	 * Original signature : <code>vl_bool vl_cpu_has_sse3()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h:277</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_cpu_has_sse3v", "?vl_cpu_has_sse3@@YAHXZ"})
	int vl_cpu_has_sse3();
	/**
	 * Original signature : <code>vl_bool vl_cpu_has_sse2()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h:278</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_cpu_has_sse2v", "?vl_cpu_has_sse2@@YAHXZ"})
	int vl_cpu_has_sse2();
	/**
	 * Original signature : <code>void vl_set_simd_enabled(vl_bool)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h:281</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_set_simd_enabledi", "?vl_set_simd_enabled@@YAXH@Z"})
	void vl_set_simd_enabled(int x);
	/**
	 * Original signature : <code>vl_bool vl_get_simd_enabled()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/host.h:282</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_get_simd_enabledv", "?vl_get_simd_enabled@@YAHXZ"})
	int vl_get_simd_enabled();
	/**
	 * @name Create and destroy<br>
	 * * @{<br>
	 * Original signature : <code>VlIKMFilt* vl_ikm_new(int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:50</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z10vl_ikm_newi", "?vl_ikm_new@@YAPA9VlIKMFiltH@Z"})
	fr.prima.jna.vlfeat.VlIKMFilt vl_ikm_new(int method);
	/**
	 * Original signature : <code>void vl_ikm_delete(VlIKMFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:51</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_ikm_deleteP9VlIKMFilt", "?vl_ikm_delete@@YAXPA9VlIKMFilt@Z"})
	void vl_ikm_delete(fr.prima.jna.vlfeat.VlIKMFilt f);
	/**
	 * @name Process data<br>
	 * * @{<br>
	 * Original signature : <code>void vl_ikm_init(VlIKMFilt*, const vl_ikm_acc*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:57</i><br>
	 * @deprecated use the safer methods {@link #vl_ikm_init(fr.prima.jna.vlfeat.VlIKMFilt, java.nio.IntBuffer, int, int)} and {@link #vl_ikm_init(fr.prima.jna.vlfeat.VlIKMFilt, com.sun.jna.ptr.IntByReference, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_ikm_initP9VlIKMFiltPKiii", "?vl_ikm_init@@YAXPA9VlIKMFiltPAHHH@Z"})
	@java.lang.Deprecated
	void vl_ikm_init(fr.prima.jna.vlfeat.VlIKMFilt f, com.sun.jna.ptr.IntByReference centers, int M, int K);
	/**
	 * @name Process data<br>
	 * * @{<br>
	 * Original signature : <code>void vl_ikm_init(VlIKMFilt*, const vl_ikm_acc*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:57</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_ikm_initP9VlIKMFiltPKiii", "?vl_ikm_init@@YAXPA9VlIKMFiltPAHHH@Z"})
	void vl_ikm_init(fr.prima.jna.vlfeat.VlIKMFilt f, java.nio.IntBuffer centers, int M, int K);
	/**
	 * Original signature : <code>void vl_ikm_init_rand(VlIKMFilt*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:58</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_ikm_init_randP9VlIKMFiltii", "?vl_ikm_init_rand@@YAXPA9VlIKMFiltHH@Z"})
	void vl_ikm_init_rand(fr.prima.jna.vlfeat.VlIKMFilt f, int M, int K);
	/**
	 * Original signature : <code>void vl_ikm_init_rand_data(VlIKMFilt*, const vl_uint8*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:59</i><br>
	 * @deprecated use the safer methods {@link #vl_ikm_init_rand_data(fr.prima.jna.vlfeat.VlIKMFilt, java.nio.ByteBuffer, int, int, int)} and {@link #vl_ikm_init_rand_data(fr.prima.jna.vlfeat.VlIKMFilt, com.sun.jna.Pointer, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_ikm_init_rand_dataP9VlIKMFiltPKhiii", "?vl_ikm_init_rand_data@@YAXPA9VlIKMFiltPAEHHH@Z"})
	@java.lang.Deprecated
	void vl_ikm_init_rand_data(fr.prima.jna.vlfeat.VlIKMFilt f, com.sun.jna.Pointer data, int M, int N, int K);
	/**
	 * Original signature : <code>void vl_ikm_init_rand_data(VlIKMFilt*, const vl_uint8*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:59</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_ikm_init_rand_dataP9VlIKMFiltPKhiii", "?vl_ikm_init_rand_data@@YAXPA9VlIKMFiltPAEHHH@Z"})
	void vl_ikm_init_rand_data(fr.prima.jna.vlfeat.VlIKMFilt f, java.nio.ByteBuffer data, int M, int N, int K);
	/**
	 * Original signature : <code>int vl_ikm_train(VlIKMFilt*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:60</i><br>
	 * @deprecated use the safer methods {@link #vl_ikm_train(fr.prima.jna.vlfeat.VlIKMFilt, java.nio.ByteBuffer, int)} and {@link #vl_ikm_train(fr.prima.jna.vlfeat.VlIKMFilt, com.sun.jna.Pointer, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_ikm_trainP9VlIKMFiltPKhi", "?vl_ikm_train@@YAHPA9VlIKMFiltPAEH@Z"})
	@java.lang.Deprecated
	int vl_ikm_train(fr.prima.jna.vlfeat.VlIKMFilt f, com.sun.jna.Pointer data, int N);
	/**
	 * Original signature : <code>int vl_ikm_train(VlIKMFilt*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:60</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_ikm_trainP9VlIKMFiltPKhi", "?vl_ikm_train@@YAHPA9VlIKMFiltPAEH@Z"})
	int vl_ikm_train(fr.prima.jna.vlfeat.VlIKMFilt f, java.nio.ByteBuffer data, int N);
	/**
	 * Original signature : <code>void vl_ikm_push(VlIKMFilt*, vl_uint*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:61</i><br>
	 * @deprecated use the safer methods {@link #vl_ikm_push(fr.prima.jna.vlfeat.VlIKMFilt, java.nio.IntBuffer, java.nio.ByteBuffer, int)} and {@link #vl_ikm_push(fr.prima.jna.vlfeat.VlIKMFilt, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_ikm_pushP9VlIKMFiltPjPKhi", "?vl_ikm_push@@YAXPA9VlIKMFiltPAIPAEH@Z"})
	@java.lang.Deprecated
	void vl_ikm_push(fr.prima.jna.vlfeat.VlIKMFilt f, com.sun.jna.ptr.IntByReference asgn, com.sun.jna.Pointer data, int N);
	/**
	 * Original signature : <code>void vl_ikm_push(VlIKMFilt*, vl_uint*, const vl_uint8*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:61</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_ikm_pushP9VlIKMFiltPjPKhi", "?vl_ikm_push@@YAXPA9VlIKMFiltPAIPAEH@Z"})
	void vl_ikm_push(fr.prima.jna.vlfeat.VlIKMFilt f, java.nio.IntBuffer asgn, java.nio.ByteBuffer data, int N);
	/**
	 * Original signature : <code>vl_uint vl_ikm_push_one(const vl_ikm_acc*, const vl_uint8*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:64</i><br>
	 * @deprecated use the safer methods {@link #vl_ikm_push_one(java.nio.IntBuffer, java.nio.ByteBuffer, int, int)} and {@link #vl_ikm_push_one(com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_ikm_push_onePKiPKhii", "?vl_ikm_push_one@@YAIPAHPAEHH@Z"})
	@java.lang.Deprecated
	int vl_ikm_push_one(com.sun.jna.ptr.IntByReference centers, com.sun.jna.Pointer data, int M, int K);
	/**
	 * Original signature : <code>vl_uint vl_ikm_push_one(const vl_ikm_acc*, const vl_uint8*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/ikmeans.h:64</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_ikm_push_onePKiPKhii", "?vl_ikm_push_one@@YAIPAHPAEHH@Z"})
	int vl_ikm_push_one(java.nio.IntBuffer centers, java.nio.ByteBuffer data, int M, int K);
	/**
	 * Original signature : <code>void vl_convtransp_f(float*, const float*, const float*, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:29</i><br>
	 * @deprecated use the safer methods {@link #vl_convtransp_f(java.nio.FloatBuffer, float[], float[], int, int, int, int)} and {@link #vl_convtransp_f(com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_convtransp_fPfPKfPKfiiii", "?vl_convtransp_f@@YAXPAMPAMPAMHHHH@Z"})
	@java.lang.Deprecated
	void vl_convtransp_f(com.sun.jna.ptr.FloatByReference dst, com.sun.jna.ptr.FloatByReference src, com.sun.jna.ptr.FloatByReference filt, int width, int height, int filt_width, int mode);
	/**
	 * Original signature : <code>void vl_convtransp_f(float*, const float*, const float*, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:29</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_convtransp_fPfPKfPKfiiii", "?vl_convtransp_f@@YAXPAMPAMPAMHHHH@Z"})
	void vl_convtransp_f(java.nio.FloatBuffer dst, float src[], float filt[], int width, int height, int filt_width, int mode);
	/**
	 * Original signature : <code>void vl_convtransp_d(double*, const double*, const double*, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:36</i><br>
	 * @deprecated use the safer methods {@link #vl_convtransp_d(java.nio.DoubleBuffer, double[], double[], int, int, int, int)} and {@link #vl_convtransp_d(com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_convtransp_dPdPKdPKdiiii", "?vl_convtransp_d@@YAXPANPANPANHHHH@Z"})
	@java.lang.Deprecated
	void vl_convtransp_d(com.sun.jna.ptr.DoubleByReference dst, com.sun.jna.ptr.DoubleByReference src, com.sun.jna.ptr.DoubleByReference filt, int width, int height, int filt_width, int mode);
	/**
	 * Original signature : <code>void vl_convtransp_d(double*, const double*, const double*, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:36</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_convtransp_dPdPKdPKdiiii", "?vl_convtransp_d@@YAXPANPANPANHHHH@Z"})
	void vl_convtransp_d(java.nio.DoubleBuffer dst, double src[], double filt[], int width, int height, int filt_width, int mode);
	/**
	 * Original signature : <code>void vl_imsmooth_f(float*, float*, const float*, int, int, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:48</i><br>
	 * @deprecated use the safer methods {@link #vl_imsmooth_f(java.nio.FloatBuffer, java.nio.FloatBuffer, float[], int, int, double)} and {@link #vl_imsmooth_f(com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, int, int, double)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_imsmooth_fPfPfPKfiid", "?vl_imsmooth_f@@YAXPAMPAMPAMHHN@Z"})
	@java.lang.Deprecated
	void vl_imsmooth_f(com.sun.jna.ptr.FloatByReference dst, com.sun.jna.ptr.FloatByReference temp, com.sun.jna.ptr.FloatByReference src, int width, int height, double sigma);
	/**
	 * Original signature : <code>void vl_imsmooth_f(float*, float*, const float*, int, int, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:48</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_imsmooth_fPfPfPKfiid", "?vl_imsmooth_f@@YAXPAMPAMPAMHHN@Z"})
	void vl_imsmooth_f(java.nio.FloatBuffer dst, java.nio.FloatBuffer temp, float src[], int width, int height, double sigma);
	/**
	 * Original signature : <code>void vl_imsmooth_d(double*, double*, const double*, int, int, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:54</i><br>
	 * @deprecated use the safer methods {@link #vl_imsmooth_d(java.nio.DoubleBuffer, java.nio.DoubleBuffer, double[], int, int, double)} and {@link #vl_imsmooth_d(com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, int, int, double)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_imsmooth_dPdPdPKdiid", "?vl_imsmooth_d@@YAXPANPANPANHHN@Z"})
	@java.lang.Deprecated
	void vl_imsmooth_d(com.sun.jna.ptr.DoubleByReference dst, com.sun.jna.ptr.DoubleByReference temp, com.sun.jna.ptr.DoubleByReference src, int width, int height, double sigma);
	/**
	 * Original signature : <code>void vl_imsmooth_d(double*, double*, const double*, int, int, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imop.h:54</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_imsmooth_dPdPdPKdiid", "?vl_imsmooth_d@@YAXPANPANPANHHN@Z"})
	void vl_imsmooth_d(java.nio.DoubleBuffer dst, java.nio.DoubleBuffer temp, double src[], int width, int height, double sigma);
	/**
	 * Original signature : <code>void vl_imconvcol_vf(float*, int, const float*, int, int, int, const float*, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:21</i><br>
	 * @deprecated use the safer methods {@link #vl_imconvcol_vf(java.nio.FloatBuffer, int, float[], int, int, int, float[], int, int, int, int)} and {@link #vl_imconvcol_vf(com.sun.jna.ptr.FloatByReference, int, com.sun.jna.ptr.FloatByReference, int, int, int, com.sun.jna.ptr.FloatByReference, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_imconvcol_vfPfiPKfiiiPKfiiij", "?vl_imconvcol_vf@@YAXPAMHPAMHHHPAMHHHI@Z"})
	@java.lang.Deprecated
	void vl_imconvcol_vf(com.sun.jna.ptr.FloatByReference dst, int dst_stride, com.sun.jna.ptr.FloatByReference src, int src_width, int src_height, int src_stride, com.sun.jna.ptr.FloatByReference filt, int filt_begin, int filt_end, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcol_vf(float*, int, const float*, int, int, int, const float*, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:21</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_imconvcol_vfPfiPKfiiiPKfiiij", "?vl_imconvcol_vf@@YAXPAMHPAMHHHPAMHHHI@Z"})
	void vl_imconvcol_vf(java.nio.FloatBuffer dst, int dst_stride, float src[], int src_width, int src_height, int src_stride, float filt[], int filt_begin, int filt_end, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcol_vd(double*, int, const double*, int, int, int, const double*, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:28</i><br>
	 * @deprecated use the safer methods {@link #vl_imconvcol_vd(java.nio.DoubleBuffer, int, double[], int, int, int, double[], int, int, int, int)} and {@link #vl_imconvcol_vd(com.sun.jna.ptr.DoubleByReference, int, com.sun.jna.ptr.DoubleByReference, int, int, int, com.sun.jna.ptr.DoubleByReference, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_imconvcol_vdPdiPKdiiiPKdiiij", "?vl_imconvcol_vd@@YAXPANHPANHHHPANHHHI@Z"})
	@java.lang.Deprecated
	void vl_imconvcol_vd(com.sun.jna.ptr.DoubleByReference dst, int dst_stride, com.sun.jna.ptr.DoubleByReference src, int src_width, int src_height, int src_stride, com.sun.jna.ptr.DoubleByReference filt, int filt_begin, int filt_end, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcol_vd(double*, int, const double*, int, int, int, const double*, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:28</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_imconvcol_vdPdiPKdiiiPKdiiij", "?vl_imconvcol_vd@@YAXPANHPANHHHPANHHHI@Z"})
	void vl_imconvcol_vd(java.nio.DoubleBuffer dst, int dst_stride, double src[], int src_width, int src_height, int src_stride, double filt[], int filt_begin, int filt_end, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcoltri_vf(float*, int, const float*, int, int, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:35</i><br>
	 * @deprecated use the safer methods {@link #vl_imconvcoltri_vf(java.nio.FloatBuffer, int, float[], int, int, int, int, int, int)} and {@link #vl_imconvcoltri_vf(com.sun.jna.ptr.FloatByReference, int, com.sun.jna.ptr.FloatByReference, int, int, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_imconvcoltri_vfPfiPKfiiiiij", "?vl_imconvcoltri_vf@@YAXPAMHPAMHHHHHI@Z"})
	@java.lang.Deprecated
	void vl_imconvcoltri_vf(com.sun.jna.ptr.FloatByReference dst, int dst_stride, com.sun.jna.ptr.FloatByReference src, int src_width, int src_height, int src_stride, int filt_size, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcoltri_vf(float*, int, const float*, int, int, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:35</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_imconvcoltri_vfPfiPKfiiiiij", "?vl_imconvcoltri_vf@@YAXPAMHPAMHHHHHI@Z"})
	void vl_imconvcoltri_vf(java.nio.FloatBuffer dst, int dst_stride, float src[], int src_width, int src_height, int src_stride, int filt_size, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcoltri_vd(double*, int, const double*, int, int, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:42</i><br>
	 * @deprecated use the safer methods {@link #vl_imconvcoltri_vd(java.nio.DoubleBuffer, int, double[], int, int, int, int, int, int)} and {@link #vl_imconvcoltri_vd(com.sun.jna.ptr.DoubleByReference, int, com.sun.jna.ptr.DoubleByReference, int, int, int, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_imconvcoltri_vdPdiPKdiiiiij", "?vl_imconvcoltri_vd@@YAXPANHPANHHHHHI@Z"})
	@java.lang.Deprecated
	void vl_imconvcoltri_vd(com.sun.jna.ptr.DoubleByReference dst, int dst_stride, com.sun.jna.ptr.DoubleByReference src, int src_width, int src_height, int src_stride, int filt_size, int step, int flags);
	/**
	 * Original signature : <code>void vl_imconvcoltri_vd(double*, int, const double*, int, int, int, int, int, unsigned int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/imopv.h:42</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_imconvcoltri_vdPdiPKdiiiiij", "?vl_imconvcoltri_vd@@YAXPANHPANHHHHHI@Z"})
	void vl_imconvcoltri_vd(java.nio.DoubleBuffer dst, int dst_stride, double src[], int src_width, int src_height, int src_stride, int filt_size, int step, int flags);
	/**
	 * @name Construction and Destruction<br>
	 * * @{<br>
	 * Original signature : <code>VlMserFilt* vl_mser_new(int, const int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:60</i><br>
	 * @deprecated use the safer methods {@link #vl_mser_new(int, int[])} and {@link #vl_mser_new(int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_mser_newiPKi", "?vl_mser_new@@YAPA11_VlMserFiltHPAH@Z"})
	@java.lang.Deprecated
	fr.prima.jna.vlfeat.VlMserFilt vl_mser_new(int ndims, com.sun.jna.ptr.IntByReference dims);
	/**
	 * @name Construction and Destruction<br>
	 * * @{<br>
	 * Original signature : <code>VlMserFilt* vl_mser_new(int, const int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:60</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_mser_newiPKi", "?vl_mser_new@@YAPA11_VlMserFiltHPAH@Z"})
	fr.prima.jna.vlfeat.VlMserFilt vl_mser_new(int ndims, int dims[]);
	/**
	 * Original signature : <code>void vl_mser_delete(VlMserFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:61</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_mser_deleteP11_VlMserFilt", "?vl_mser_delete@@YAXPA11_VlMserFilt@Z"})
	void vl_mser_delete(fr.prima.jna.vlfeat.VlMserFilt f);
	/**
	 * @name Processing <br>
	 * * @{<br>
	 * Original signature : <code>void vl_mser_process(VlMserFilt*, const vl_mser_pix*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:67</i><br>
	 * @deprecated use the safer methods {@link #vl_mser_process(fr.prima.jna.vlfeat.VlMserFilt, java.nio.ByteBuffer)} and {@link #vl_mser_process(fr.prima.jna.vlfeat.VlMserFilt, com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_mser_processP11_VlMserFiltPKh", "?vl_mser_process@@YAXPA11_VlMserFiltPAE@Z"})
	@java.lang.Deprecated
	void vl_mser_process(fr.prima.jna.vlfeat.VlMserFilt f, com.sun.jna.Pointer im);
	/**
	 * @name Processing <br>
	 * * @{<br>
	 * Original signature : <code>void vl_mser_process(VlMserFilt*, const vl_mser_pix*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:67</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_mser_processP11_VlMserFiltPKh", "?vl_mser_process@@YAXPA11_VlMserFiltPAE@Z"})
	void vl_mser_process(fr.prima.jna.vlfeat.VlMserFilt f, java.nio.ByteBuffer im);
	/**
	 * Original signature : <code>void vl_mser_ell_fit(VlMserFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/mser.h:69</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_mser_ell_fitP11_VlMserFilt", "?vl_mser_ell_fit@@YAXPA11_VlMserFilt@Z"})
	void vl_mser_ell_fit(fr.prima.jna.vlfeat.VlMserFilt f);
	/**
	 * @name Core operations<br>
	 * * @{<br>
	 * Original signature : <code>int vl_pgm_extract_head(FILE*, VlPgmImage*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:49</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_pgm_extract_headP8_IO_FILEP11_VlPgmImage", "?vl_pgm_extract_head@@YAHPA8_IO_FILEPA11_VlPgmImage@Z"})
	int vl_pgm_extract_head(fr.prima.jna.vlfeat.VLFeatLibrary._IO_FILE f, fr.prima.jna.vlfeat.VlPgmImage im);
	/**
	 * Original signature : <code>int vl_pgm_extract_data(FILE*, const VlPgmImage*, void*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:50</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_pgm_extract_dataP8_IO_FILEPK11_VlPgmImagePv", "?vl_pgm_extract_data@@YAHPA8_IO_FILEPA11_VlPgmImagePAX@Z"})
	int vl_pgm_extract_data(fr.prima.jna.vlfeat.VLFeatLibrary._IO_FILE f, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.Pointer data);
	/**
	 * Original signature : <code>int vl_pgm_insert(FILE*, const VlPgmImage*, const void*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:51</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_pgm_insertP8_IO_FILEPK11_VlPgmImagePKv", "?vl_pgm_insert@@YAHPA8_IO_FILEPA11_VlPgmImagePAX@Z"})
	int vl_pgm_insert(fr.prima.jna.vlfeat.VLFeatLibrary._IO_FILE f, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.Pointer data);
	/**
	 * Original signature : <code>int vl_pgm_get_npixels(const VlPgmImage*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:54</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_pgm_get_npixelsPK11_VlPgmImage", "?vl_pgm_get_npixels@@YAHPA11_VlPgmImage@Z"})
	int vl_pgm_get_npixels(fr.prima.jna.vlfeat.VlPgmImage im);
	/**
	 * Original signature : <code>int vl_pgm_get_bpp(const VlPgmImage*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:55</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_pgm_get_bppPK11_VlPgmImage", "?vl_pgm_get_bpp@@YAHPA11_VlPgmImage@Z"})
	int vl_pgm_get_bpp(fr.prima.jna.vlfeat.VlPgmImage im);
	/**
	 * @name Helper functions<br>
	 * * @{<br>
	 * Original signature : <code>int vl_pgm_write(const char*, const vl_uint8*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:60</i><br>
	 * @deprecated use the safer methods {@link #vl_pgm_write(java.lang.String, java.nio.ByteBuffer, int, int)} and {@link #vl_pgm_write(com.sun.jna.Pointer, com.sun.jna.Pointer, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_pgm_writePKcPKhii", "?vl_pgm_write@@YAHPADPAEHH@Z"})
	@java.lang.Deprecated
	int vl_pgm_write(com.sun.jna.Pointer name, com.sun.jna.Pointer data, int width, int height);
	/**
	 * @name Helper functions<br>
	 * * @{<br>
	 * Original signature : <code>int vl_pgm_write(const char*, const vl_uint8*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:60</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_pgm_writePKcPKhii", "?vl_pgm_write@@YAHPADPAEHH@Z"})
	int vl_pgm_write(java.lang.String name, java.nio.ByteBuffer data, int width, int height);
	/**
	 * Original signature : <code>int vl_pgm_write_f(const char*, const float*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:63</i><br>
	 * @deprecated use the safer methods {@link #vl_pgm_write_f(java.lang.String, float[], int, int)} and {@link #vl_pgm_write_f(com.sun.jna.Pointer, com.sun.jna.ptr.FloatByReference, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_pgm_write_fPKcPKfii", "?vl_pgm_write_f@@YAHPADPAMHH@Z"})
	@java.lang.Deprecated
	int vl_pgm_write_f(com.sun.jna.Pointer name, com.sun.jna.ptr.FloatByReference data, int width, int height);
	/**
	 * Original signature : <code>int vl_pgm_write_f(const char*, const float*, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:63</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_pgm_write_fPKcPKfii", "?vl_pgm_write_f@@YAHPADPAMHH@Z"})
	int vl_pgm_write_f(java.lang.String name, float data[], int width, int height);
	/**
	 * Original signature : <code>int vl_pgm_read_new(const char*, VlPgmImage*, vl_uint8**)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:66</i><br>
	 * @deprecated use the safer methods {@link #vl_pgm_read_new(java.lang.String, fr.prima.jna.vlfeat.VlPgmImage, com.sun.jna.ptr.PointerByReference)} and {@link #vl_pgm_read_new(com.sun.jna.Pointer, fr.prima.jna.vlfeat.VlPgmImage, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_pgm_read_newPKcP11_VlPgmImagePPh", "?vl_pgm_read_new@@YAHPADPA11_VlPgmImagePAPAE@Z"})
	@java.lang.Deprecated
	int vl_pgm_read_new(com.sun.jna.Pointer name, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.ptr.PointerByReference data);
	/**
	 * Original signature : <code>int vl_pgm_read_new(const char*, VlPgmImage*, vl_uint8**)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:66</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z15vl_pgm_read_newPKcP11_VlPgmImagePPh", "?vl_pgm_read_new@@YAHPADPA11_VlPgmImagePAPAE@Z"})
	int vl_pgm_read_new(java.lang.String name, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.ptr.PointerByReference data);
	/**
	 * Original signature : <code>int vl_pgm_read_new_f(const char*, VlPgmImage*, float**)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:69</i><br>
	 * @deprecated use the safer methods {@link #vl_pgm_read_new_f(java.lang.String, fr.prima.jna.vlfeat.VlPgmImage, com.sun.jna.ptr.PointerByReference)} and {@link #vl_pgm_read_new_f(com.sun.jna.Pointer, fr.prima.jna.vlfeat.VlPgmImage, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_pgm_read_new_fPKcP11_VlPgmImagePPf", "?vl_pgm_read_new_f@@YAHPADPA11_VlPgmImagePAPAM@Z"})
	@java.lang.Deprecated
	int vl_pgm_read_new_f(com.sun.jna.Pointer name, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.ptr.PointerByReference data);
	/**
	 * Original signature : <code>int vl_pgm_read_new_f(const char*, VlPgmImage*, float**)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/pgm.h:69</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_pgm_read_new_fPKcP11_VlPgmImagePPf", "?vl_pgm_read_new_f@@YAHPADPA11_VlPgmImagePAPAM@Z"})
	int vl_pgm_read_new_f(java.lang.String name, fr.prima.jna.vlfeat.VlPgmImage im, com.sun.jna.ptr.PointerByReference data);
	/**
	 * Original signature : <code>VlQS* vl_quickshift_new(const vl_qs_type*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/quickshift.h:50</i><br>
	 * @deprecated use the safer methods {@link #vl_quickshift_new(java.nio.DoubleBuffer, int, int, int)} and {@link #vl_quickshift_new(com.sun.jna.ptr.DoubleByReference, int, int, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_quickshift_newPKdiii", "?vl_quickshift_new@@YAPA4VlQSPANHHH@Z"})
	@java.lang.Deprecated
	fr.prima.jna.vlfeat.VlQS vl_quickshift_new(com.sun.jna.ptr.DoubleByReference im, int height, int width, int channels);
	/**
	 * Original signature : <code>VlQS* vl_quickshift_new(const vl_qs_type*, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/quickshift.h:50</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_quickshift_newPKdiii", "?vl_quickshift_new@@YAPA4VlQSPANHHH@Z"})
	fr.prima.jna.vlfeat.VlQS vl_quickshift_new(java.nio.DoubleBuffer im, int height, int width, int channels);
	/**
	 * Original signature : <code>void vl_quickshift_delete(VlQS*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/quickshift.h:54</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z20vl_quickshift_deleteP4VlQS", "?vl_quickshift_delete@@YAXPA4VlQS@Z"})
	void vl_quickshift_delete(fr.prima.jna.vlfeat.VlQS q);
	/**
	 * Original signature : <code>void vl_quickshift_process(VlQS*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/quickshift.h:62</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_quickshift_processP4VlQS", "?vl_quickshift_process@@YAXPA4VlQS@Z"})
	void vl_quickshift_process(fr.prima.jna.vlfeat.VlQS q);
	/**
	 * @name Setting and reading the state<br>
	 * *<br>
	 * * @{<br>
	 * Original signature : <code>void vl_rand_set_state(const vl_uint32[625])</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:20</i><br>
	 * @deprecated use the safer methods {@link #vl_rand_set_state(java.nio.IntBuffer)} and {@link #vl_rand_set_state(com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_rand_set_statePKj", "?vl_rand_set_state@@YAXQAI@Z"})
	@java.lang.Deprecated
	void vl_rand_set_state(com.sun.jna.ptr.IntByReference state);
	/**
	 * @name Setting and reading the state<br>
	 * *<br>
	 * * @{<br>
	 * Original signature : <code>void vl_rand_set_state(const vl_uint32[625])</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:20</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_rand_set_statePKj", "?vl_rand_set_state@@YAXQAI@Z"})
	void vl_rand_set_state(java.nio.IntBuffer state);
	/**
	 * Original signature : <code>void vl_rand_get_state(vl_uint32*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:21</i><br>
	 * @deprecated use the safer methods {@link #vl_rand_get_state(java.nio.IntBuffer)} and {@link #vl_rand_get_state(com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_rand_get_statePj", "?vl_rand_get_state@@YAXPAI@Z"})
	@java.lang.Deprecated
	void vl_rand_get_state(com.sun.jna.ptr.IntByReference state);
	/**
	 * Original signature : <code>void vl_rand_get_state(vl_uint32*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:21</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z17vl_rand_get_statePj", "?vl_rand_get_state@@YAXPAI@Z"})
	void vl_rand_get_state(java.nio.IntBuffer state);
	/**
	 * Original signature : <code>void vl_rand_seed(vl_uint32)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:22</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_rand_seedj", "?vl_rand_seed@@YAXI@Z"})
	void vl_rand_seed(int s);
	/**
	 * Original signature : <code>void vl_rand_seed_by_array(const vl_uint32[], int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:23</i><br>
	 * @deprecated use the safer methods {@link #vl_rand_seed_by_array(java.nio.IntBuffer, int)} and {@link #vl_rand_seed_by_array(com.sun.jna.ptr.IntByReference, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_rand_seed_by_arrayPKji", "?vl_rand_seed_by_array@@YAXQAIH@Z"})
	@java.lang.Deprecated
	void vl_rand_seed_by_array(com.sun.jna.ptr.IntByReference init_key, int key_length);
	/**
	 * Original signature : <code>void vl_rand_seed_by_array(const vl_uint32[], int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:23</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_rand_seed_by_arrayPKji", "?vl_rand_seed_by_array@@YAXQAIH@Z"})
	void vl_rand_seed_by_array(java.nio.IntBuffer init_key, int key_length);
	/**
	 * @name Generate random numbers<br>
	 * *<br>
	 * * @{<br>
	 * Original signature : <code>vl_uint32 vl_rand_uint32()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:29</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_rand_uint32v", "?vl_rand_uint32@@YAIXZ"})
	int vl_rand_uint32();
	/**
	 * Original signature : <code>vl_int32 vl_rand_int31()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:30</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_rand_int31v", "?vl_rand_int31@@YAHXZ"})
	int vl_rand_int31();
	/**
	 * Original signature : <code>double vl_rand_real1()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:31</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_rand_real1v", "?vl_rand_real1@@YANXZ"})
	double vl_rand_real1();
	/**
	 * Original signature : <code>double vl_rand_real2()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:32</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_rand_real2v", "?vl_rand_real2@@YANXZ"})
	double vl_rand_real2();
	/**
	 * Original signature : <code>double vl_rand_real3()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:33</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_rand_real3v", "?vl_rand_real3@@YANXZ"})
	double vl_rand_real3();
	/**
	 * Original signature : <code>double vl_rand_res53()</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/random.h:34</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_rand_res53v", "?vl_rand_res53@@YANXZ"})
	double vl_rand_res53();
	/**
	 * Original signature : <code>void vl_rodrigues(double*, double*, const double*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/rodrigues.h:23</i><br>
	 * @deprecated use the safer methods {@link #vl_rodrigues(java.nio.DoubleBuffer, java.nio.DoubleBuffer, double[])} and {@link #vl_rodrigues(com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_rodriguesPdPdPKd", "?vl_rodrigues@@YAXPANPANPAN@Z"})
	@java.lang.Deprecated
	void vl_rodrigues(com.sun.jna.ptr.DoubleByReference R_pt, com.sun.jna.ptr.DoubleByReference dR_pt, com.sun.jna.ptr.DoubleByReference om_pt);
	/**
	 * Original signature : <code>void vl_rodrigues(double*, double*, const double*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/rodrigues.h:23</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z12vl_rodriguesPdPdPKd", "?vl_rodrigues@@YAXPANPANPAN@Z"})
	void vl_rodrigues(java.nio.DoubleBuffer R_pt, java.nio.DoubleBuffer dR_pt, double om_pt[]);
	/**
	 * Original signature : <code>void vl_irodrigues(double*, double*, const double*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/rodrigues.h:24</i><br>
	 * @deprecated use the safer methods {@link #vl_irodrigues(java.nio.DoubleBuffer, java.nio.DoubleBuffer, double[])} and {@link #vl_irodrigues(com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_irodriguesPdPdPKd", "?vl_irodrigues@@YAXPANPANPAN@Z"})
	@java.lang.Deprecated
	void vl_irodrigues(com.sun.jna.ptr.DoubleByReference om_pt, com.sun.jna.ptr.DoubleByReference dom_pt, com.sun.jna.ptr.DoubleByReference R_pt);
	/**
	 * Original signature : <code>void vl_irodrigues(double*, double*, const double*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/rodrigues.h:24</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z13vl_irodriguesPdPdPKd", "?vl_irodrigues@@YAXPANPANPAN@Z"})
	void vl_irodrigues(java.nio.DoubleBuffer om_pt, java.nio.DoubleBuffer dom_pt, double R_pt[]);
	/**
	 * Original signature : <code>VlSiftFilt* vl_sift_new(int, int, int, int, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:88</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z11vl_sift_newiiiii", "?vl_sift_new@@YAPA10VlSiftFiltHHHHH@Z"})
	fr.prima.jna.vlfeat.VlSiftFilt vl_sift_new(int width, int height, int noctaves, int nlevels, int o_min);
	/**
	 * Original signature : <code>void vl_sift_delete(VlSiftFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:92</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_sift_deleteP10VlSiftFilt", "?vl_sift_delete@@YAXPA10VlSiftFilt@Z"})
	void vl_sift_delete(fr.prima.jna.vlfeat.VlSiftFilt f);
	/**
	 * Original signature : <code>int vl_sift_process_first_octave(VlSiftFilt*, const vl_sift_pix*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:100</i><br>
	 * @deprecated use the safer methods {@link #vl_sift_process_first_octave(fr.prima.jna.vlfeat.VlSiftFilt, java.nio.FloatBuffer)} and {@link #vl_sift_process_first_octave(fr.prima.jna.vlfeat.VlSiftFilt, com.sun.jna.ptr.FloatByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z28vl_sift_process_first_octaveP10VlSiftFiltPKf", "?vl_sift_process_first_octave@@YAHPA10VlSiftFiltPAM@Z"})
	@java.lang.Deprecated
	int vl_sift_process_first_octave(fr.prima.jna.vlfeat.VlSiftFilt f, com.sun.jna.ptr.FloatByReference im);
	/**
	 * Original signature : <code>int vl_sift_process_first_octave(VlSiftFilt*, const vl_sift_pix*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:100</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z28vl_sift_process_first_octaveP10VlSiftFiltPKf", "?vl_sift_process_first_octave@@YAHPA10VlSiftFiltPAM@Z"})
	int vl_sift_process_first_octave(fr.prima.jna.vlfeat.VlSiftFilt f, java.nio.FloatBuffer im);
	/**
	 * Original signature : <code>int vl_sift_process_next_octave(VlSiftFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:104</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z27vl_sift_process_next_octaveP10VlSiftFilt", "?vl_sift_process_next_octave@@YAHPA10VlSiftFilt@Z"})
	int vl_sift_process_next_octave(fr.prima.jna.vlfeat.VlSiftFilt f);
	/**
	 * Original signature : <code>void vl_sift_detect(VlSiftFilt*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:107</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_sift_detectP10VlSiftFilt", "?vl_sift_detect@@YAXPA10VlSiftFilt@Z"})
	void vl_sift_detect(fr.prima.jna.vlfeat.VlSiftFilt f);
	/**
	 * Original signature : <code>int vl_sift_calc_keypoint_orientations(VlSiftFilt*, double[4], const VlSiftKeypoint*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:110</i><br>
	 * @deprecated use the safer methods {@link #vl_sift_calc_keypoint_orientations(fr.prima.jna.vlfeat.VlSiftFilt, java.nio.DoubleBuffer, fr.prima.jna.vlfeat.VlSiftKeypoint)} and {@link #vl_sift_calc_keypoint_orientations(fr.prima.jna.vlfeat.VlSiftFilt, com.sun.jna.ptr.DoubleByReference, fr.prima.jna.vlfeat.VlSiftKeypoint)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z34vl_sift_calc_keypoint_orientationsP10VlSiftFiltPdPK14VlSiftKeypoint", "?vl_sift_calc_keypoint_orientations@@YAHPA10VlSiftFiltQANPA14VlSiftKeypoint@Z"})
	@java.lang.Deprecated
	int vl_sift_calc_keypoint_orientations(fr.prima.jna.vlfeat.VlSiftFilt f, com.sun.jna.ptr.DoubleByReference angles, fr.prima.jna.vlfeat.VlSiftKeypoint k);
	/**
	 * Original signature : <code>int vl_sift_calc_keypoint_orientations(VlSiftFilt*, double[4], const VlSiftKeypoint*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:110</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z34vl_sift_calc_keypoint_orientationsP10VlSiftFiltPdPK14VlSiftKeypoint", "?vl_sift_calc_keypoint_orientations@@YAHPA10VlSiftFiltQANPA14VlSiftKeypoint@Z"})
	int vl_sift_calc_keypoint_orientations(fr.prima.jna.vlfeat.VlSiftFilt f, java.nio.DoubleBuffer angles, fr.prima.jna.vlfeat.VlSiftKeypoint k);
	/**
	 * Original signature : <code>void vl_sift_calc_keypoint_descriptor(VlSiftFilt*, vl_sift_pix*, const VlSiftKeypoint*, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:114</i><br>
	 * @deprecated use the safer methods {@link #vl_sift_calc_keypoint_descriptor(fr.prima.jna.vlfeat.VlSiftFilt, java.nio.FloatBuffer, fr.prima.jna.vlfeat.VlSiftKeypoint, double)} and {@link #vl_sift_calc_keypoint_descriptor(fr.prima.jna.vlfeat.VlSiftFilt, com.sun.jna.ptr.FloatByReference, fr.prima.jna.vlfeat.VlSiftKeypoint, double)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z32vl_sift_calc_keypoint_descriptorP10VlSiftFiltPfPK14VlSiftKeypointd", "?vl_sift_calc_keypoint_descriptor@@YAXPA10VlSiftFiltPAMPA14VlSiftKeypointN@Z"})
	@java.lang.Deprecated
	void vl_sift_calc_keypoint_descriptor(fr.prima.jna.vlfeat.VlSiftFilt f, com.sun.jna.ptr.FloatByReference descr, fr.prima.jna.vlfeat.VlSiftKeypoint k, double angle);
	/**
	 * Original signature : <code>void vl_sift_calc_keypoint_descriptor(VlSiftFilt*, vl_sift_pix*, const VlSiftKeypoint*, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:114</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z32vl_sift_calc_keypoint_descriptorP10VlSiftFiltPfPK14VlSiftKeypointd", "?vl_sift_calc_keypoint_descriptor@@YAXPA10VlSiftFiltPAMPA14VlSiftKeypointN@Z"})
	void vl_sift_calc_keypoint_descriptor(fr.prima.jna.vlfeat.VlSiftFilt f, java.nio.FloatBuffer descr, fr.prima.jna.vlfeat.VlSiftKeypoint k, double angle);
	/**
	 * Original signature : <code>void vl_sift_calc_raw_descriptor(const VlSiftFilt*, const vl_sift_pix*, vl_sift_pix*, int, int, double, double, double, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:120</i><br>
	 * @deprecated use the safer methods {@link #vl_sift_calc_raw_descriptor(fr.prima.jna.vlfeat.VlSiftFilt, java.nio.FloatBuffer, java.nio.FloatBuffer, int, int, double, double, double, double)} and {@link #vl_sift_calc_raw_descriptor(fr.prima.jna.vlfeat.VlSiftFilt, com.sun.jna.ptr.FloatByReference, com.sun.jna.ptr.FloatByReference, int, int, double, double, double, double)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z27vl_sift_calc_raw_descriptorPK10VlSiftFiltPKfPfiidddd", "?vl_sift_calc_raw_descriptor@@YAXPA10VlSiftFiltPAMPAMHHNNNN@Z"})
	@java.lang.Deprecated
	void vl_sift_calc_raw_descriptor(fr.prima.jna.vlfeat.VlSiftFilt f, com.sun.jna.ptr.FloatByReference image, com.sun.jna.ptr.FloatByReference descr, int widht, int height, double x, double y, double s, double angle0);
	/**
	 * Original signature : <code>void vl_sift_calc_raw_descriptor(const VlSiftFilt*, const vl_sift_pix*, vl_sift_pix*, int, int, double, double, double, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:120</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z27vl_sift_calc_raw_descriptorPK10VlSiftFiltPKfPfiidddd", "?vl_sift_calc_raw_descriptor@@YAXPA10VlSiftFiltPAMPAMHHNNNN@Z"})
	void vl_sift_calc_raw_descriptor(fr.prima.jna.vlfeat.VlSiftFilt f, java.nio.FloatBuffer image, java.nio.FloatBuffer descr, int widht, int height, double x, double y, double s, double angle0);
	/**
	 * Original signature : <code>void vl_sift_keypoint_init(const VlSiftFilt*, VlSiftKeypoint*, double, double, double)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/sift.h:128</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z21vl_sift_keypoint_initPK10VlSiftFiltP14VlSiftKeypointddd", "?vl_sift_keypoint_init@@YAXPA10VlSiftFiltPA14VlSiftKeypointNNN@Z"})
	void vl_sift_keypoint_init(fr.prima.jna.vlfeat.VlSiftFilt f, fr.prima.jna.vlfeat.VlSiftKeypoint k, double x, double y, double sigma);
	/**
	 * Original signature : <code>int vl_string_copy(char*, int, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:35</i><br>
	 * @deprecated use the safer methods {@link #vl_string_copy(java.nio.ByteBuffer, int, java.lang.String)} and {@link #vl_string_copy(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_string_copyPciPKc", "?vl_string_copy@@YAHPADHPAD@Z"})
	@java.lang.Deprecated
	int vl_string_copy(com.sun.jna.Pointer dst, int n, com.sun.jna.Pointer src);
	/**
	 * Original signature : <code>int vl_string_copy(char*, int, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:35</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z14vl_string_copyPciPKc", "?vl_string_copy@@YAHPADHPAD@Z"})
	int vl_string_copy(java.nio.ByteBuffer dst, int n, java.lang.String src);
	/**
	 * Original signature : <code>int vl_string_copy_sub(char*, int, const char*, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:36</i><br>
	 * @deprecated use the safer methods {@link #vl_string_copy_sub(java.nio.ByteBuffer, int, java.lang.String, java.lang.String)} and {@link #vl_string_copy_sub(com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_string_copy_subPciPKcPKc", "?vl_string_copy_sub@@YAHPADHPADPAD@Z"})
	@java.lang.Deprecated
	int vl_string_copy_sub(com.sun.jna.Pointer dst, int n, com.sun.jna.Pointer beg, com.sun.jna.Pointer end);
	/**
	 * Original signature : <code>int vl_string_copy_sub(char*, int, const char*, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:36</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_string_copy_subPciPKcPKc", "?vl_string_copy_sub@@YAHPADHPADPAD@Z"})
	int vl_string_copy_sub(java.nio.ByteBuffer dst, int n, java.lang.String beg, java.lang.String end);
	/**
	 * Original signature : <code>char* vl_string_parse_protocol(const char*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:37</i><br>
	 * @deprecated use the safer methods {@link #vl_string_parse_protocol(java.lang.String, java.nio.IntBuffer)} and {@link #vl_string_parse_protocol(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24vl_string_parse_protocolPKcPi", "?vl_string_parse_protocol@@YAPADPADPAH@Z"})
	@java.lang.Deprecated
	com.sun.jna.Pointer vl_string_parse_protocol(com.sun.jna.Pointer str, com.sun.jna.ptr.IntByReference prot);
	/**
	 * Original signature : <code>char* vl_string_parse_protocol(const char*, int*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:37</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z24vl_string_parse_protocolPKcPi", "?vl_string_parse_protocol@@YAPADPADPAH@Z"})
	com.sun.jna.Pointer vl_string_parse_protocol(java.lang.String str, java.nio.IntBuffer prot);
	/**
	 * Original signature : <code>const char* vl_string_protocol_name(int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:38</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z23vl_string_protocol_namei", "?vl_string_protocol_name@@YAPADH@Z"})
	java.lang.String vl_string_protocol_name(int prot);
	/**
	 * Original signature : <code>int vl_string_basename(char*, int, const char*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:39</i><br>
	 * @deprecated use the safer methods {@link #vl_string_basename(java.nio.ByteBuffer, int, java.lang.String, int)} and {@link #vl_string_basename(com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_string_basenamePciPKci", "?vl_string_basename@@YAHPADHPADH@Z"})
	@java.lang.Deprecated
	int vl_string_basename(com.sun.jna.Pointer dst, int n, com.sun.jna.Pointer src, int n_ext);
	/**
	 * Original signature : <code>int vl_string_basename(char*, int, const char*, int)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:39</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z18vl_string_basenamePciPKci", "?vl_string_basename@@YAHPADHPADH@Z"})
	int vl_string_basename(java.nio.ByteBuffer dst, int n, java.lang.String src, int n_ext);
	/**
	 * Original signature : <code>int vl_string_replace_wildcard(char*, int, const char*, char, char, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:40</i><br>
	 * @deprecated use the safer methods {@link #vl_string_replace_wildcard(java.nio.ByteBuffer, int, java.lang.String, byte, byte, java.lang.String)} and {@link #vl_string_replace_wildcard(com.sun.jna.Pointer, int, com.sun.jna.Pointer, byte, byte, com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z26vl_string_replace_wildcardPciPKcccPKc", "?vl_string_replace_wildcard@@YAHPADHPADDDPAD@Z"})
	@java.lang.Deprecated
	int vl_string_replace_wildcard(com.sun.jna.Pointer dst, int n, com.sun.jna.Pointer src, byte wild, byte esc, com.sun.jna.Pointer repl);
	/**
	 * Original signature : <code>int vl_string_replace_wildcard(char*, int, const char*, char, char, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:40</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z26vl_string_replace_wildcardPciPKcccPKc", "?vl_string_replace_wildcard@@YAHPADHPADDDPAD@Z"})
	int vl_string_replace_wildcard(java.nio.ByteBuffer dst, int n, java.lang.String src, byte wild, byte esc, java.lang.String repl);
	/**
	 * Original signature : <code>char* vl_string_find_char_rev(const char*, const char*, char)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:41</i><br>
	 * @deprecated use the safer methods {@link #vl_string_find_char_rev(java.lang.String, java.lang.String, byte)} and {@link #vl_string_find_char_rev(com.sun.jna.Pointer, com.sun.jna.Pointer, byte)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z23vl_string_find_char_revPKcPKcc", "?vl_string_find_char_rev@@YAPADPADPADD@Z"})
	@java.lang.Deprecated
	com.sun.jna.Pointer vl_string_find_char_rev(com.sun.jna.Pointer beg, com.sun.jna.Pointer end, byte c);
	/**
	 * Original signature : <code>char* vl_string_find_char_rev(const char*, const char*, char)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:41</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z23vl_string_find_char_revPKcPKcc", "?vl_string_find_char_rev@@YAPADPADPADD@Z"})
	com.sun.jna.Pointer vl_string_find_char_rev(java.lang.String beg, java.lang.String end, byte c);
	/**
	 * Original signature : <code>int vl_string_length(const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:42</i><br>
	 * @deprecated use the safer methods {@link #vl_string_length(java.lang.String)} and {@link #vl_string_length(com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_string_lengthPKc", "?vl_string_length@@YAHPAD@Z"})
	@java.lang.Deprecated
	int vl_string_length(com.sun.jna.Pointer str);
	/**
	 * Original signature : <code>int vl_string_length(const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:42</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z16vl_string_lengthPKc", "?vl_string_length@@YAHPAD@Z"})
	int vl_string_length(java.lang.String str);
	/**
	 * Original signature : <code>int vl_string_casei_cmp(const char*, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:43</i><br>
	 * @deprecated use the safer methods {@link #vl_string_casei_cmp(java.lang.String, java.lang.String)} and {@link #vl_string_casei_cmp(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_string_casei_cmpPKcPKc", "?vl_string_casei_cmp@@YAHPADPAD@Z"})
	@java.lang.Deprecated
	int vl_string_casei_cmp(com.sun.jna.Pointer s1, com.sun.jna.Pointer s2);
	/**
	 * Original signature : <code>int vl_string_casei_cmp(const char*, const char*)</code><br>
	 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/stringop.h:43</i>
	 */
	@com.ochafik.lang.jnaerator.runtime.Mangling({"_Z19vl_string_casei_cmpPKcPKc", "?vl_string_casei_cmp@@YAHPADPAD@Z"})
	int vl_string_casei_cmp(java.lang.String s1, java.lang.String s2);
	public static final com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_malloc_func_callback> vl_malloc_func = new com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_malloc_func_callback>(fr.prima.jna.vlfeat.VLFeatLibrary.JNA_NATIVE_LIB, vl_malloc_func_callback.class, "vl_malloc_func");
	public static final com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_realloc_func_callback> vl_realloc_func = new com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_realloc_func_callback>(fr.prima.jna.vlfeat.VLFeatLibrary.JNA_NATIVE_LIB, vl_realloc_func_callback.class, "vl_realloc_func");
	public static final com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_calloc_func_callback> vl_calloc_func = new com.ochafik.lang.jnaerator.runtime.globals.GlobalCallback<vl_calloc_func_callback>(fr.prima.jna.vlfeat.VLFeatLibrary.JNA_NATIVE_LIB, vl_calloc_func_callback.class, "vl_calloc_func");
	/// Pointer to unknown (opaque) type
	public static class _IO_FILE extends com.sun.jna.PointerType {
		public _IO_FILE(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public _IO_FILE() {
			super();
		}
	}
}
