package fr.prima.jna.vlfeat;
/**
 * <i>native declaration : /local_home/softs/sources/vlfeat/vl/aib.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class VlAIB extends com.ochafik.lang.jnaerator.runtime.Structure<VlAIB, VlAIB.ByValue, VlAIB.ByReference> {
	/**
	 * < Entires to nodes<br>
	 * C type : vl_uint*
	 */
	public com.sun.jna.ptr.IntByReference nodes;
	/**
	 * < Total number of entries (= # active nodes)<br>
	 * C type : vl_uint
	 */
	public int nentries;
	/**
	 * < Minimum distance to an entry<br>
	 * C type : double*
	 */
	public com.sun.jna.ptr.DoubleByReference beta;
	/**
	 * < Closest entry<br>
	 * C type : vl_uint*
	 */
	public com.sun.jna.ptr.IntByReference bidx;
	/**
	 * < List of entries to update<br>
	 * C type : vl_uint*
	 */
	public com.sun.jna.ptr.IntByReference which;
	/**
	 * < Number of entries to update<br>
	 * C type : vl_uint
	 */
	public int nwhich;
	/**
	 * < Joint probability table<br>
	 * C type : double*
	 */
	public com.sun.jna.ptr.DoubleByReference Pcx;
	/**
	 * < Marginal.<br>
	 * C type : double*
	 */
	public com.sun.jna.ptr.DoubleByReference Px;
	/**
	 * < Marginal.<br>
	 * C type : double*
	 */
	public com.sun.jna.ptr.DoubleByReference Pc;
	/**
	 * < Number of feature values<br>
	 * C type : vl_uint
	 */
	public int nvalues;
	/**
	 * < Number of labels<br>
	 * C type : vl_uint
	 */
	public int nlabels;
	/**
	 * < Array of parents<br>
	 * C type : vl_uint*
	 */
	public com.sun.jna.ptr.IntByReference parents;
	/**
	 * < Cost of each merge<br>
	 * C type : double*
	 */
	public com.sun.jna.ptr.DoubleByReference costs;
	public VlAIB() {
		super();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected VlAIB newInstance() { return new VlAIB(); }
	public static VlAIB[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(VlAIB.class, arrayLength);
	}
	public static class ByReference extends VlAIB implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends VlAIB implements com.sun.jna.Structure.ByValue {}
}
