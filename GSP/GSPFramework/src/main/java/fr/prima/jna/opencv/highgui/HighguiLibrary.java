package fr.prima.jna.opencv.highgui;
/**
 * JNA Wrapper for library <b>highgui</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface HighguiLibrary extends com.sun.jna.Library {
	public static final java.lang.String JNA_LIBRARY_NAME = com.ochafik.lang.jnaerator.runtime.LibraryExtractor.getLibraryPath("highgui", true, fr.prima.jna.opencv.highgui.HighguiLibrary.class);
	public static final com.sun.jna.NativeLibrary JNA_NATIVE_LIB = com.sun.jna.NativeLibrary.getInstance(fr.prima.jna.opencv.highgui.HighguiLibrary.JNA_LIBRARY_NAME, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final fr.prima.jna.opencv.highgui.HighguiLibrary INSTANCE = (fr.prima.jna.opencv.highgui.HighguiLibrary)com.sun.jna.Native.loadLibrary(fr.prima.jna.opencv.highgui.HighguiLibrary.JNA_LIBRARY_NAME, fr.prima.jna.opencv.highgui.HighguiLibrary.class, com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper.DEFAULT_OPTIONS);
	/// <i>native declaration : highgui.h</i>
	public static final int CV_WINDOW_AUTOSIZE = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_MOUSEMOVE = 0;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_LBUTTONDOWN = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_RBUTTONDOWN = 2;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_MBUTTONDOWN = 3;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_LBUTTONUP = 4;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_RBUTTONUP = 5;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_MBUTTONUP = 6;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_LBUTTONDBLCLK = 7;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_RBUTTONDBLCLK = 8;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_MBUTTONDBLCLK = 9;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_LBUTTON = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_RBUTTON = 2;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_MBUTTON = 4;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_CTRLKEY = 8;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_SHIFTKEY = 16;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_EVENT_FLAG_ALTKEY = 32;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_LOAD_IMAGE_UNCHANGED = -1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_LOAD_IMAGE_GRAYSCALE = 0;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_LOAD_IMAGE_COLOR = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_LOAD_IMAGE_ANYDEPTH = 2;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_LOAD_IMAGE_ANYCOLOR = 4;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CVTIMG_FLIP = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CVTIMG_SWAP_RB = 2;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_ANY = 0;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_MIL = 100;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_VFW = 200;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_V4L = 200;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_V4L2 = 200;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_FIREWARE = 300;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_IEEE1394 = 300;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_DC1394 = 300;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_CMU1394 = 300;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_STEREO = 400;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_TYZX = 400;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_TYZX_LEFT = 400;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_TYZX_RIGHT = 401;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_TYZX_COLOR = 402;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_TYZX_Z = 403;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_QT = 500;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_POS_MSEC = 0;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_POS_FRAMES = 1;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_POS_AVI_RATIO = 2;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FRAME_WIDTH = 3;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FRAME_HEIGHT = 4;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FPS = 5;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FOURCC = 6;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FRAME_COUNT = 7;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_FORMAT = 8;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_MODE = 9;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_BRIGHTNESS = 10;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_CONTRAST = 11;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_SATURATION = 12;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_HUE = 13;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_GAIN = 14;
	/// <i>native declaration : highgui.h</i>
	public static final int CV_CAP_PROP_CONVERT_RGB = 15;
	/// <i>native declaration : highgui.h</i>
	public static final int HG_AUTOSIZE = fr.prima.jna.opencv.highgui.HighguiLibrary.CV_WINDOW_AUTOSIZE;
	/// <i>native declaration : highgui.h</i>
	public interface CvTrackbarCallback extends com.sun.jna.Callback {
		void invoke(int pos);
	}
	/// <i>native declaration : highgui.h</i>
	public interface CvMouseCallback extends com.sun.jna.Callback {
		void invoke(int event, int x, int y, int flags, com.sun.jna.Pointer param);
	}
	/**
	 * this function is used to set some external parameters in case of X Window<br>
	 * Original signature : <code>int cvInitSystem(int, char**)</code><br>
	 * <i>native declaration : highgui.h:115</i><br>
	 * @deprecated use the safer methods {@link #cvInitSystem(int, java.lang.String[])} and {@link #cvInitSystem(int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@java.lang.Deprecated
	int cvInitSystem(int argc, com.sun.jna.ptr.PointerByReference argv);
	/**
	 * this function is used to set some external parameters in case of X Window<br>
	 * Original signature : <code>int cvInitSystem(int, char**)</code><br>
	 * <i>native declaration : highgui.h:115</i>
	 */
	int cvInitSystem(int argc, java.lang.String argv[]);
	/**
	 * Original signature : <code>int cvStartWindowThread()</code><br>
	 * <i>native declaration : highgui.h:117</i>
	 */
	int cvStartWindowThread();
	/**
	 * create window<br>
	 * Original signature : <code>int cvNamedWindow(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:121</i><br>
	 * @deprecated use the safer methods {@link #cvNamedWindow(java.lang.String, int)} and {@link #cvNamedWindow(com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated
	int cvNamedWindow(com.sun.jna.Pointer name, int flags);
	/**
	 * create window<br>
	 * Original signature : <code>int cvNamedWindow(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:121</i>
	 */
	int cvNamedWindow(java.lang.String name, int flags);
	/**
	 * display image within window (highgui windows remember their content)<br>
	 * Original signature : <code>void cvShowImage(const char*, const CvArr*)</code><br>
	 * <i>native declaration : highgui.h:124</i><br>
	 * @deprecated use the safer methods {@link #cvShowImage(java.lang.String, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr)} and {@link #cvShowImage(com.sun.jna.Pointer, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr)} instead
	 */
	@java.lang.Deprecated
	void cvShowImage(com.sun.jna.Pointer name, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr image);
	/**
	 * display image within window (highgui windows remember their content)<br>
	 * Original signature : <code>void cvShowImage(const char*, const CvArr*)</code><br>
	 * <i>native declaration : highgui.h:124</i>
	 */
	void cvShowImage(java.lang.String name, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr image);
	/**
	 * resize/move window<br>
	 * Original signature : <code>void cvResizeWindow(const char*, int, int)</code><br>
	 * <i>native declaration : highgui.h:127</i><br>
	 * @deprecated use the safer methods {@link #cvResizeWindow(java.lang.String, int, int)} and {@link #cvResizeWindow(com.sun.jna.Pointer, int, int)} instead
	 */
	@java.lang.Deprecated
	void cvResizeWindow(com.sun.jna.Pointer name, int width, int height);
	/**
	 * resize/move window<br>
	 * Original signature : <code>void cvResizeWindow(const char*, int, int)</code><br>
	 * <i>native declaration : highgui.h:127</i>
	 */
	void cvResizeWindow(java.lang.String name, int width, int height);
	/**
	 * Original signature : <code>void cvMoveWindow(const char*, int, int)</code><br>
	 * <i>native declaration : highgui.h:128</i><br>
	 * @deprecated use the safer methods {@link #cvMoveWindow(java.lang.String, int, int)} and {@link #cvMoveWindow(com.sun.jna.Pointer, int, int)} instead
	 */
	@java.lang.Deprecated
	void cvMoveWindow(com.sun.jna.Pointer name, int x, int y);
	/**
	 * Original signature : <code>void cvMoveWindow(const char*, int, int)</code><br>
	 * <i>native declaration : highgui.h:128</i>
	 */
	void cvMoveWindow(java.lang.String name, int x, int y);
	/**
	 * destroy window and all the trackers associated with it<br>
	 * Original signature : <code>void cvDestroyWindow(const char*)</code><br>
	 * <i>native declaration : highgui.h:132</i><br>
	 * @deprecated use the safer methods {@link #cvDestroyWindow(java.lang.String)} and {@link #cvDestroyWindow(com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated
	void cvDestroyWindow(com.sun.jna.Pointer name);
	/**
	 * destroy window and all the trackers associated with it<br>
	 * Original signature : <code>void cvDestroyWindow(const char*)</code><br>
	 * <i>native declaration : highgui.h:132</i>
	 */
	void cvDestroyWindow(java.lang.String name);
	/**
	 * Original signature : <code>void cvDestroyAllWindows()</code><br>
	 * <i>native declaration : highgui.h:134</i>
	 */
	void cvDestroyAllWindows();
	/**
	 * get native window handle (HWND in case of Win32 and Widget in case of X Window)<br>
	 * Original signature : <code>void* cvGetWindowHandle(const char*)</code><br>
	 * <i>native declaration : highgui.h:137</i><br>
	 * @deprecated use the safer methods {@link #cvGetWindowHandle(java.lang.String)} and {@link #cvGetWindowHandle(com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated
	com.sun.jna.Pointer cvGetWindowHandle(com.sun.jna.Pointer name);
	/**
	 * get native window handle (HWND in case of Win32 and Widget in case of X Window)<br>
	 * Original signature : <code>void* cvGetWindowHandle(const char*)</code><br>
	 * <i>native declaration : highgui.h:137</i>
	 */
	com.sun.jna.Pointer cvGetWindowHandle(java.lang.String name);
	/**
	 * get name of highgui window given its native handle<br>
	 * Original signature : <code>char* cvGetWindowName(void*)</code><br>
	 * <i>native declaration : highgui.h:140</i>
	 */
	java.lang.String cvGetWindowName(com.sun.jna.Pointer window_handle);
	/**
	 * create trackbar and display it on top of given window, set callback<br>
	 * Original signature : <code>int cvCreateTrackbar(const char*, const char*, int*, int, CvTrackbarCallback)</code><br>
	 * <i>native declaration : highgui.h:146</i><br>
	 * @deprecated use the safer methods {@link #cvCreateTrackbar(java.lang.String, java.lang.String, java.nio.IntBuffer, int, fr.prima.jna.opencv.highgui.HighguiLibrary.CvTrackbarCallback)} and {@link #cvCreateTrackbar(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, int, fr.prima.jna.opencv.highgui.HighguiLibrary.CvTrackbarCallback)} instead
	 */
	@java.lang.Deprecated
	int cvCreateTrackbar(com.sun.jna.Pointer trackbar_name, com.sun.jna.Pointer window_name, com.sun.jna.ptr.IntByReference value, int count, fr.prima.jna.opencv.highgui.HighguiLibrary.CvTrackbarCallback on_change);
	/**
	 * create trackbar and display it on top of given window, set callback<br>
	 * Original signature : <code>int cvCreateTrackbar(const char*, const char*, int*, int, CvTrackbarCallback)</code><br>
	 * <i>native declaration : highgui.h:146</i>
	 */
	int cvCreateTrackbar(java.lang.String trackbar_name, java.lang.String window_name, java.nio.IntBuffer value, int count, fr.prima.jna.opencv.highgui.HighguiLibrary.CvTrackbarCallback on_change);
	/**
	 * retrieve or set trackbar position<br>
	 * Original signature : <code>int cvGetTrackbarPos(const char*, const char*)</code><br>
	 * <i>native declaration : highgui.h:150</i><br>
	 * @deprecated use the safer methods {@link #cvGetTrackbarPos(java.lang.String, java.lang.String)} and {@link #cvGetTrackbarPos(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated
	int cvGetTrackbarPos(com.sun.jna.Pointer trackbar_name, com.sun.jna.Pointer window_name);
	/**
	 * retrieve or set trackbar position<br>
	 * Original signature : <code>int cvGetTrackbarPos(const char*, const char*)</code><br>
	 * <i>native declaration : highgui.h:150</i>
	 */
	int cvGetTrackbarPos(java.lang.String trackbar_name, java.lang.String window_name);
	/**
	 * Original signature : <code>void cvSetTrackbarPos(const char*, const char*, int)</code><br>
	 * <i>native declaration : highgui.h:151</i><br>
	 * @deprecated use the safer methods {@link #cvSetTrackbarPos(java.lang.String, java.lang.String, int)} and {@link #cvSetTrackbarPos(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated
	void cvSetTrackbarPos(com.sun.jna.Pointer trackbar_name, com.sun.jna.Pointer window_name, int pos);
	/**
	 * Original signature : <code>void cvSetTrackbarPos(const char*, const char*, int)</code><br>
	 * <i>native declaration : highgui.h:151</i>
	 */
	void cvSetTrackbarPos(java.lang.String trackbar_name, java.lang.String window_name, int pos);
	/**
	 * assign callback for mouse events<br>
	 * Original signature : <code>void cvSetMouseCallback(const char*, CvMouseCallback, void*)</code><br>
	 * <i>native declaration : highgui.h:174</i><br>
	 * @deprecated use the safer methods {@link #cvSetMouseCallback(java.lang.String, fr.prima.jna.opencv.highgui.HighguiLibrary.CvMouseCallback, com.sun.jna.Pointer)} and {@link #cvSetMouseCallback(com.sun.jna.Pointer, fr.prima.jna.opencv.highgui.HighguiLibrary.CvMouseCallback, com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated
	void cvSetMouseCallback(com.sun.jna.Pointer window_name, fr.prima.jna.opencv.highgui.HighguiLibrary.CvMouseCallback on_mouse, com.sun.jna.Pointer param);
	/**
	 * assign callback for mouse events<br>
	 * Original signature : <code>void cvSetMouseCallback(const char*, CvMouseCallback, void*)</code><br>
	 * <i>native declaration : highgui.h:174</i>
	 */
	void cvSetMouseCallback(java.lang.String window_name, fr.prima.jna.opencv.highgui.HighguiLibrary.CvMouseCallback on_mouse, com.sun.jna.Pointer param);
	/**
	 * load image from file <br>
	 * iscolor can be a combination of above flags where CV_LOAD_IMAGE_UNCHANGED<br>
	 * overrides the other flags<br>
	 * using CV_LOAD_IMAGE_ANYCOLOR alone is equivalent to CV_LOAD_IMAGE_UNCHANGED<br>
	 * unless CV_LOAD_IMAGE_ANYDEPTH is specified images are converted to 8bit<br>
	 * Original signature : <code>IplImage* cvLoadImage(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:194</i><br>
	 * @deprecated use the safer methods {@link #cvLoadImage(java.lang.String, int)} and {@link #cvLoadImage(com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated
	fr.prima.jna.opencv.cxtypes.IplImage cvLoadImage(com.sun.jna.Pointer filename, int iscolor);
	/**
	 * load image from file <br>
	 * iscolor can be a combination of above flags where CV_LOAD_IMAGE_UNCHANGED<br>
	 * overrides the other flags<br>
	 * using CV_LOAD_IMAGE_ANYCOLOR alone is equivalent to CV_LOAD_IMAGE_UNCHANGED<br>
	 * unless CV_LOAD_IMAGE_ANYDEPTH is specified images are converted to 8bit<br>
	 * Original signature : <code>IplImage* cvLoadImage(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:194</i>
	 */
	fr.prima.jna.opencv.cxtypes.IplImage cvLoadImage(java.lang.String filename, int iscolor);
	/**
	 * Original signature : <code>CvMat* cvLoadImageM(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:195</i><br>
	 * @deprecated use the safer methods {@link #cvLoadImageM(java.lang.String, int)} and {@link #cvLoadImageM(com.sun.jna.Pointer, int)} instead
	 */
	@java.lang.Deprecated
	fr.prima.jna.opencv.cxtypes.CvMat cvLoadImageM(com.sun.jna.Pointer filename, int iscolor);
	/**
	 * Original signature : <code>CvMat* cvLoadImageM(const char*, int)</code><br>
	 * <i>native declaration : highgui.h:195</i>
	 */
	fr.prima.jna.opencv.cxtypes.CvMat cvLoadImageM(java.lang.String filename, int iscolor);
	/**
	 * save image to file<br>
	 * Original signature : <code>int cvSaveImage(const char*, const CvArr*)</code><br>
	 * <i>native declaration : highgui.h:198</i><br>
	 * @deprecated use the safer methods {@link #cvSaveImage(java.lang.String, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr)} and {@link #cvSaveImage(com.sun.jna.Pointer, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr)} instead
	 */
	@java.lang.Deprecated
	int cvSaveImage(com.sun.jna.Pointer filename, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr image);
	/**
	 * save image to file<br>
	 * Original signature : <code>int cvSaveImage(const char*, const CvArr*)</code><br>
	 * <i>native declaration : highgui.h:198</i>
	 */
	int cvSaveImage(java.lang.String filename, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr image);
	/**
	 * utility function: convert one image to another with optional vertical flip<br>
	 * Original signature : <code>void cvConvertImage(const CvArr*, CvArr*, int)</code><br>
	 * <i>native declaration : highgui.h:203</i>
	 */
	void cvConvertImage(fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr src, fr.prima.jna.opencv.highgui.HighguiLibrary.CvArr dst, int flags);
	/**
	 * wait for key event infinitely (delay<=0) or for "delay" milliseconds<br>
	 * Original signature : <code>int cvWaitKey(int)</code><br>
	 * <i>native declaration : highgui.h:206</i>
	 */
	int cvWaitKey(int delay);
	/**
	 * start capturing frames from video file<br>
	 * Original signature : <code>CvCapture* cvCreateFileCapture(const char*)</code><br>
	 * <i>native declaration : highgui.h:217</i><br>
	 * @deprecated use the safer methods {@link #cvCreateFileCapture(java.lang.String)} and {@link #cvCreateFileCapture(com.sun.jna.Pointer)} instead
	 */
	@java.lang.Deprecated
	fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture cvCreateFileCapture(com.sun.jna.Pointer filename);
	/**
	 * start capturing frames from video file<br>
	 * Original signature : <code>CvCapture* cvCreateFileCapture(const char*)</code><br>
	 * <i>native declaration : highgui.h:217</i>
	 */
	fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture cvCreateFileCapture(java.lang.String filename);
	/**
	 * start capturing frames from camera: index = camera_index + domain_offset (CV_CAP_*)<br>
	 * Original signature : <code>CvCapture* cvCreateCameraCapture(int)</code><br>
	 * <i>native declaration : highgui.h:242</i>
	 */
	fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture cvCreateCameraCapture(int index);
	/**
	 * grab a frame, return 1 on success, 0 on fail. <br>
	 * this function is thought to be fast<br>
	 * Original signature : <code>int cvGrabFrame(CvCapture*)</code><br>
	 * <i>native declaration : highgui.h:246</i>
	 */
	int cvGrabFrame(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture);
	/**
	 * get the frame grabbed with cvGrabFrame(..) <br>
	 * This function may apply some frame processing like <br>
	 * frame decompression, flipping etc.<br>
	 * !!!DO NOT RELEASE or MODIFY the retrieved frame!!!<br>
	 * Original signature : <code>IplImage* cvRetrieveFrame(CvCapture*)</code><br>
	 * <i>native declaration : highgui.h:252</i>
	 */
	fr.prima.jna.opencv.cxtypes.IplImage cvRetrieveFrame(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture);
	/**
	 * Just a combination of cvGrabFrame and cvRetrieveFrame<br>
	 * !!!DO NOT RELEASE or MODIFY the retrieved frame!!!<br>
	 * Original signature : <code>IplImage* cvQueryFrame(CvCapture*)</code><br>
	 * <i>native declaration : highgui.h:256</i>
	 */
	fr.prima.jna.opencv.cxtypes.IplImage cvQueryFrame(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture);
	/**
	 * stop capturing/reading and free resources<br>
	 * Original signature : <code>void cvReleaseCapture(CvCapture**)</code><br>
	 * <i>native declaration : highgui.h:259</i><br>
	 * @deprecated use the safer method {@link #cvReleaseCapture(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture[])} instead
	 */
	@java.lang.Deprecated
	void cvReleaseCapture(com.sun.jna.ptr.PointerByReference capture);
	/**
	 * stop capturing/reading and free resources<br>
	 * Original signature : <code>void cvReleaseCapture(CvCapture**)</code><br>
	 * <i>native declaration : highgui.h:259</i>
	 */
	void cvReleaseCapture(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture[]);
	/**
	 * retrieve or set capture properties<br>
	 * Original signature : <code>double cvGetCaptureProperty(CvCapture*, int)</code><br>
	 * <i>native declaration : highgui.h:280</i>
	 */
	double cvGetCaptureProperty(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture, int property_id);
	/**
	 * Original signature : <code>int cvSetCaptureProperty(CvCapture*, int, double)</code><br>
	 * <i>native declaration : highgui.h:281</i>
	 */
	int cvSetCaptureProperty(fr.prima.jna.opencv.highgui.HighguiLibrary.CvCapture capture, int property_id, double value);
	/**
	 * initialize video file writer<br>
	 * Original signature : <code>CvVideoWriter* cvCreateVideoWriter(const char*, int, double, CvSize, int)</code><br>
	 * <i>native declaration : highgui.h:290</i><br>
	 * @deprecated use the safer methods {@link #cvCreateVideoWriter(java.lang.String, int, double, fr.prima.jna.opencv.cxtypes.CvSize.ByValue, int)} and {@link #cvCreateVideoWriter(com.sun.jna.Pointer, int, double, fr.prima.jna.opencv.cxtypes.CvSize.ByValue, int)} instead
	 */
	@java.lang.Deprecated
	fr.prima.jna.opencv.highgui.HighguiLibrary.CvVideoWriter cvCreateVideoWriter(com.sun.jna.Pointer filename, int fourcc, double fps, fr.prima.jna.opencv.cxtypes.CvSize.ByValue frame_size, int is_color);
	/**
	 * initialize video file writer<br>
	 * Original signature : <code>CvVideoWriter* cvCreateVideoWriter(const char*, int, double, CvSize, int)</code><br>
	 * <i>native declaration : highgui.h:290</i>
	 */
	fr.prima.jna.opencv.highgui.HighguiLibrary.CvVideoWriter cvCreateVideoWriter(java.lang.String filename, int fourcc, double fps, fr.prima.jna.opencv.cxtypes.CvSize.ByValue frame_size, int is_color);
	/**
	 * write frame to video file<br>
	 * Original signature : <code>int cvWriteFrame(CvVideoWriter*, const IplImage*)</code><br>
	 * <i>native declaration : highgui.h:295</i>
	 */
	int cvWriteFrame(fr.prima.jna.opencv.highgui.HighguiLibrary.CvVideoWriter writer, fr.prima.jna.opencv.cxtypes.IplImage image);
	/**
	 * close video file writer<br>
	 * Original signature : <code>void cvReleaseVideoWriter(CvVideoWriter**)</code><br>
	 * <i>native declaration : highgui.h:298</i><br>
	 * @deprecated use the safer method {@link #cvReleaseVideoWriter(fr.prima.jna.opencv.highgui.HighguiLibrary.CvVideoWriter[])} instead
	 */
	@java.lang.Deprecated
	void cvReleaseVideoWriter(com.sun.jna.ptr.PointerByReference writer);
	/**
	 * close video file writer<br>
	 * Original signature : <code>void cvReleaseVideoWriter(CvVideoWriter**)</code><br>
	 * <i>native declaration : highgui.h:298</i>
	 */
	void cvReleaseVideoWriter(fr.prima.jna.opencv.highgui.HighguiLibrary.CvVideoWriter writer[]);
	/// Pointer to unknown (opaque) type
	public static class CvArr extends com.sun.jna.PointerType {
		public CvArr(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public CvArr() {
			super();
		}
	}
	/// Pointer to unknown (opaque) type
	public static class CvCapture extends com.sun.jna.PointerType {
		public CvCapture(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public CvCapture() {
			super();
		}
	}
	/// Pointer to unknown (opaque) type
	public static class CvVideoWriter extends com.sun.jna.PointerType {
		public CvVideoWriter(com.sun.jna.Pointer pointer) {
			super(pointer);
		}
		public CvVideoWriter() {
			super();
		}
	}
}
